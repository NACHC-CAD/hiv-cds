{
  "resourceType": "Library",
  "id": "HIVContactDataElements",
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  } ],
  "url": "http://fhir.org/guides/nachc/hiv-cds/Library/HIVContactDataElements",
  "name": "HIVContactDataElements",
  "title": "Library - Contact Data Elements",
  "description": "A Generated Logic library encapsulating necessary concepts and data elements for Encounters in relation for HIV Screening.",
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FC",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/Library/FHIRCommon"
  }, {
    "type": "depends-on",
    "display": "Library NC",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/Library/NACHCCommon"
  }, {
    "type": "depends-on",
    "display": "Library HC",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/Library/HIVCommon"
  }, {
    "type": "depends-on",
    "display": "Library Cx",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/Library/HIVConcepts"
  }, {
    "type": "depends-on",
    "display": "Value set Patient Encounter Choices",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a0-de2"
  }, {
    "type": "depends-on",
    "display": "Value set Drug Abuse Choices",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a0-de64"
  }, {
    "type": "depends-on",
    "display": "Value set HIV infection as a condition Choices",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a1-de2"
  }, {
    "type": "depends-on",
    "display": "Value set HIV Test",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a2-de1"
  }, {
    "type": "depends-on",
    "display": "Value set HIV Test Choices Grouper",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a2-de1-choices-grouper"
  }, {
    "type": "depends-on",
    "display": "Value set HIV Test Ordered Choices",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a2-de217"
  }, {
    "type": "depends-on",
    "display": "Value set Hepatitis C Diagnosis Choices Grouper",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-b1-de1-choices-grouper"
  }, {
    "type": "depends-on",
    "display": "Value set Hepatitis C Test",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-b2-de1"
  }, {
    "type": "depends-on",
    "display": "Value set Hepatitis C Test Choices Grouper",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-b2-de1-choices-grouper"
  }, {
    "type": "depends-on",
    "display": "Value set Hepatitis C Procedures Choices",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-b2-de113"
  }, {
    "type": "depends-on",
    "display": "Value set Syphilis Diagnosis Choices Grouper",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-c1-de1-choices-grouper"
  }, {
    "type": "depends-on",
    "display": "Value set Syphilis Test",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-c2-de1"
  }, {
    "type": "depends-on",
    "display": "Value set Syphilis Test Choices Grouper",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-c2-de1-choices-grouper"
  }, {
    "type": "depends-on",
    "display": "Value set Gonorrhea Diagnosis Choices Grouper",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-d1-de1-choices-grouper"
  }, {
    "type": "depends-on",
    "display": "Value set Gonorrhea Test",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-d2-de1"
  }, {
    "type": "depends-on",
    "display": "Value set Gonorrhea Test Choices Grouper",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-d2-de1-choices-grouper"
  }, {
    "type": "depends-on",
    "display": "Value set Chlamydia Diagnosis Choices Grouper",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-e1-de1-choices-grouper"
  }, {
    "type": "depends-on",
    "display": "Value set Chlamydia Test",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-e2-de1"
  }, {
    "type": "depends-on",
    "display": "Value set Chlamydia Test Choices Grouper",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-e2-de1-choices-grouper"
  }, {
    "type": "depends-on",
    "display": "Value set Drug Rehabilitation Choices",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f1-de2"
  }, {
    "type": "depends-on",
    "display": "Value set Injection Findings",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f1-de12"
  }, {
    "type": "depends-on",
    "display": "Value set Injection Findings Choices",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f1-de13"
  }, {
    "type": "depends-on",
    "display": "Value set Injection Drug Use Diagnosis Choices",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f1-de16"
  }, {
    "type": "depends-on",
    "display": "Value set Injection Drug Use Choices",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f1-de201"
  }, {
    "type": "depends-on",
    "display": "Value set Pregnancy Encounters Choices",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de2"
  }, {
    "type": "depends-on",
    "display": "Value set Maternal Care Choices",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de109"
  }, {
    "type": "depends-on",
    "display": "Value set Pregnancy Conditions Choices",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de1132"
  }, {
    "type": "depends-on",
    "display": "Value set Third Trimester Encounters Choices",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de39"
  }, {
    "type": "depends-on",
    "display": "Value set Pregnancy Supervision Choices",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de43"
  }, {
    "type": "depends-on",
    "display": "Value set Pregnancy Procedures Choices",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de673"
  }, {
    "type": "depends-on",
    "display": "Value set Pregnancy Observations",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de904"
  }, {
    "type": "depends-on",
    "display": "Value set Pregnancy Observations Choices",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de905"
  }, {
    "type": "depends-on",
    "display": "Value set Post Exposure Prophylaxis Choices",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-g1-de2"
  }, {
    "type": "depends-on",
    "display": "Value set Prep Dispensed Medications Choices Grouper",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-g2-de26-choices-grouper"
  }, {
    "type": "depends-on",
    "display": "Value set PEP Medication Prescriptions Choices Grouper",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-g1-de5-choices-grouper"
  }, {
    "type": "depends-on",
    "display": "Value set Prep Medication Prescriptions Choices Grouper",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-g2-de1-choices-grouper"
  }, {
    "type": "depends-on",
    "display": "Value set Prep Medication Prescriptions",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-g2-de1"
  }, {
    "type": "depends-on",
    "display": "Value set Sexual Activity - Past Year",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de11"
  }, {
    "type": "depends-on",
    "display": "Value set Sexual Activity - History",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de12"
  }, {
    "type": "depends-on",
    "display": "Value set Sexual Activity - Men",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de13"
  }, {
    "type": "depends-on",
    "display": "Value set Sexual Activity - Women",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de14"
  }, {
    "type": "depends-on",
    "display": "Value set Sexual Activity - Number of Partners",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de15"
  }, {
    "type": "depends-on",
    "display": "Value set Sexual Activity - New Partner Past 3 Months",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de16"
  }, {
    "type": "depends-on",
    "display": "Value set Sexual Activity - Partners History",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de17"
  }, {
    "type": "depends-on",
    "display": "Value set Sexual Activity - Partners Number of Partners",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de18"
  }, {
    "type": "depends-on",
    "display": "Value set Sexual Activity - Partners HIV History",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de19"
  }, {
    "type": "depends-on",
    "display": "Value set HIV Diagnosis",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a1-de1"
  }, {
    "type": "depends-on",
    "display": "Value set Sexual Activity - Drug or Alcohol Use",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de20"
  }, {
    "type": "depends-on",
    "display": "Value set Sexual Activity - Exchanged for Sex",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de21"
  }, {
    "type": "depends-on",
    "display": "Value set Sexual Activity - Coercion",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de22"
  }, {
    "type": "depends-on",
    "display": "Value set Sexual Activity - Kind of Sex - Anal",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de23"
  }, {
    "type": "depends-on",
    "display": "Value set Sexual Activity - Male - Kind of Sex - Receptive Anal",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de24"
  }, {
    "type": "depends-on",
    "display": "Value set Sexual Activity - Male - Kind of Sex - Insertive Anal",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de25"
  }, {
    "type": "depends-on",
    "display": "Value set Sexual Activity - Kind of Sex - Vaginal",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de26"
  }, {
    "type": "depends-on",
    "display": "Value set Pregnancy Conditions",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de1131"
  }, {
    "type": "depends-on",
    "display": "Value set Hepatitis C Diagnosis",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-b1-de1"
  }, {
    "type": "depends-on",
    "display": "Value set Syphilis Diagnosis",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-c1-de1"
  }, {
    "type": "depends-on",
    "display": "Value set Gonorrhea Diagnosis",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-d1-de1"
  }, {
    "type": "depends-on",
    "display": "Value set Chlamydia Diagnosis",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-e1-de1"
  }, {
    "type": "depends-on",
    "display": "Value set Injection Drug Use Diagnosis",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f1-de15"
  }, {
    "type": "depends-on",
    "display": "Value set Seeking STD Treatment",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de9"
  }, {
    "type": "depends-on",
    "display": "Value set DAST 10 Question 1",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h2-de1"
  }, {
    "type": "depends-on",
    "display": "Value set DAST 10 Question 6",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h2-de11"
  }, {
    "type": "depends-on",
    "display": "Value set DAST 10 Question 7",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h2-de13"
  }, {
    "type": "depends-on",
    "display": "Value set DAST 10 Question 8",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h2-de15"
  }, {
    "type": "depends-on",
    "display": "Value set DAST 10 Question 9",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h2-de17"
  }, {
    "type": "depends-on",
    "display": "Value set DAST 10 Question 10",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h2-de19"
  }, {
    "type": "depends-on",
    "display": "Value set DAST 10 Question 2",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h2-de3"
  }, {
    "type": "depends-on",
    "display": "Value set DAST 10 Question 3",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h2-de5"
  }, {
    "type": "depends-on",
    "display": "Value set DAST 10 Question 4",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h2-de7"
  }, {
    "type": "depends-on",
    "display": "Value set DAST 10 Question 5",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h2-de9"
  } ],
  "parameter": [ {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  }, {
    "name": "Sexual Orientation",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Extension"
  }, {
    "name": "Gender Identity",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Extension"
  }, {
    "name": "Patient Encounter",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Encounter"
  }, {
    "name": "Drug Abuse",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "HIV Diagnosis",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "HIV Test",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "HIV Test Ordered",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "ServiceRequest"
  }, {
    "name": "Hepatitis C Diagnosis",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Hepatitis C Test",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Hepatitis C Procedures",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Procedure"
  }, {
    "name": "Syphilis Diagnosis",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Syphilis Test",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Gonorrhea Diagnosis",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Gonorrhea Test",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Chlamydia Diagnosis",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Chlamydia Test",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Drug Rehabilitation",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Procedure"
  }, {
    "name": "Injection Findings",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Injection Drug Use Diagnosis",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Injection Drug Use",
    "use": "out",
    "min": 0,
    "max": "*"
  }, {
    "name": "Pregnancy Encounters",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Encounter"
  }, {
    "name": "Maternal Care",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Procedure"
  }, {
    "name": "Pregnancy Conditions",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Third Trimester Encounters",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Encounter"
  }, {
    "name": "Pregnancy Supervision",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Procedure"
  }, {
    "name": "Pregnancy Procedures",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Procedure"
  }, {
    "name": "Pregnancy Observations",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Post Exposure Prophylaxis",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Procedure"
  }, {
    "name": "Post Exposure Prophylaxis Dispensed Medications",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "MedicationDispense"
  }, {
    "name": "Post Exposure Prophylaxis Medication Prescriptions",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "MedicationRequest"
  }, {
    "name": "Pre Exposure Prophylaxis Medication Prescriptions",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "MedicationRequest"
  }, {
    "name": "Pre Exposure Prophylaxis Dispensed Medications",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "MedicationDispense"
  }, {
    "name": "Previous HIV Screening",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Previous experience with PREP",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Sexual Activity - Past Year",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Sexual Activity - History",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Sexual Activity - Men",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Sexual Activity - Women",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Sexual Activity - Number of Partners",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Sexual Activity - New Partner Past 3 Months",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Sexual Activity - Partners History",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Sexual Activity - Partners Number of Partners",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Sexual Activity - Partners HIV History",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Previous HIV Diagnosis",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Sexual Activity - Drug or Alcohol Use",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Sexual Activity - Exchanged for Sex",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Sexual Activity - Coercion",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Sexual Activity - Kind of Sex - Anal",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Sexual Activity - Male - Kind of Sex - Receptive Anal",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Sexual Activity - Male - Kind of Sex - Insertive Anal",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Sexual Activity - Kind of Sex - Vaginal",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Patient Currently Pregnant",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Patient Diagnosed with HCV",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Patient Diagnosed with Syphilis",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Patient Diagnosed with Gonorrhea",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Patient Diagnosed with Chlamydia",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Patient has used Injection Drugs",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Seeking STD Treatment",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "DAST 10 Question 1",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "DAST 10 Question 6",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "DAST 10 Question 7",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "DAST 10 Question 8",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "DAST 10 Question 9",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "DAST 10 Question 10",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "DAST 10 Question 2",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "DAST 10 Question 3",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "DAST 10 Question 4",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "DAST 10 Question 5",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ]
  }, {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ]
  }, {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a0-de2"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a0-de64"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a1-de2"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a2-de1"
    } ]
  }, {
    "type": "ServiceRequest",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/ServiceRequest" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a2-de217"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-b1-de1-choices-grouper"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-b2-de1"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-b2-de113"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-c1-de1-choices-grouper"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-c2-de1"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-d1-de1-choices-grouper"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-d2-de1"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-e1-de1-choices-grouper"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-e2-de1"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f1-de2"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f1-de12"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f1-de16"
    } ]
  }, {
    "profile": [ "http://hl7.org/fhir/StructureDefinition/MedicationStatement" ],
    "mustSupport": [ "medication" ],
    "codeFilter": [ {
      "path": "medication",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f1-de201"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de2"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de109"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de1132"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de39"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de43"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de673"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de904"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "mustSupport": [ "code" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-g1-de2"
    } ]
  }, {
    "type": "MedicationDispense",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/MedicationDispense" ],
    "mustSupport": [ "medication" ],
    "codeFilter": [ {
      "path": "medication",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-g2-de26-choices-grouper"
    } ]
  }, {
    "type": "MedicationRequest",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/MedicationRequest" ],
    "mustSupport": [ "medication" ],
    "codeFilter": [ {
      "path": "medication",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-g1-de5-choices-grouper"
    } ]
  }, {
    "type": "MedicationRequest",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/MedicationRequest" ],
    "mustSupport": [ "medication" ],
    "codeFilter": [ {
      "path": "medication",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-g2-de1-choices-grouper"
    } ]
  }, {
    "type": "MedicationDispense",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/MedicationDispense" ],
    "mustSupport": [ "medication" ],
    "codeFilter": [ {
      "path": "medication",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-g2-de26-choices-grouper"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a2-de1"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-g2-de1"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de11"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de12"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de13"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de14"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de15"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de16"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de17"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de18"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de19"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-a1-de1"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de20"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de21"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de22"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de23"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de24"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de25"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de26"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f2-de1131"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-b1-de1"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-c1-de1"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-d1-de1"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-e1-de1"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-f1-de15"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h1-de9"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h2-de1"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h2-de11"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h2-de13"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h2-de15"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h2-de17"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h2-de19"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h2-de3"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h2-de5"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h2-de7"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/nachc-h2-de9"
    } ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": ""
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  } ]
}