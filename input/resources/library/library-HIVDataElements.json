{
  "resourceType": "Library",
  "id": "HIVDataElements",
  "url": "http://fhir.org/guides/nachc/hiv-cds/Library/HIVDataElements",
  "name": "HIVDataElements",
  "title": "Library - HIV Data Elements",
  "description": "A Generated Logic library encapsulating necessary concepts and data elements in relation for HIV Screening in context of the Patient.",
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FC",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/Library/FHIRCommon"
  }, {
    "type": "depends-on",
    "display": "Library NC",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/Library/NACHCCommon"
  }, {
    "type": "depends-on",
    "display": "Library AC",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/Library/HIVCommon"
  }, {
    "type": "depends-on",
    "display": "Library Cx",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/Library/HIVConcepts"
  }, {
    "type": "depends-on",
    "display": "Value set HIV infection as a condition",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hiv-infection-as-a-condition"
  }, {
    "type": "depends-on",
    "display": "Value set HIV-1 HIV 2 Ab Ag tests",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hiv-1-hiv-2-ab-ag-tests"
  }, {
    "type": "depends-on",
    "display": "Value set HIV Viral Load",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hiv-viral-load"
  }, {
    "type": "depends-on",
    "display": "Value set Hepatitis C Virus Infection (Disorders)",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hepatitis-c-virus-infection-disorders"
  }, {
    "type": "depends-on",
    "display": "Value set Chronic Infection of liver due to Hepatitis C virus",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chronic-infection-of-liver-due-to-hepatitis-c-virus"
  }, {
    "type": "depends-on",
    "display": "Value set HCV Infection (Organism or Substance in Lab Results)",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hcv-infection-organism-or-substance-in-lab-results"
  }, {
    "type": "depends-on",
    "display": "Value set Hepatitis C condition",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hepatitis-c-condition"
  }, {
    "type": "depends-on",
    "display": "Value set Hepatitis C Ag",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hepatitis-c-ag"
  }, {
    "type": "depends-on",
    "display": "Value set Hepatitis C nucleic acid",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hepatitis-c-nucleic-acid"
  }, {
    "type": "depends-on",
    "display": "Value set Hepatitis C virus antibody test using Immunoblotting (IB) method",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hepatitis-c-virus-antibody-test-using-immunoblotting-ib-method"
  }, {
    "type": "depends-on",
    "display": "Value set Hepatitis C virus antibody test",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hepatitis-c-virus-antibody-test"
  }, {
    "type": "depends-on",
    "display": "Value set Hepatitis C virus nucleic (RNA) test",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hepatitis-c-virus-nucleic-rna-test"
  }, {
    "type": "depends-on",
    "display": "Value set Syphilis",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/syphilis"
  }, {
    "type": "depends-on",
    "display": "Value set Syphilis (Organism or Substance in Lab Results)",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/syphilis-organism-or-substance-in-lab-results"
  }, {
    "type": "depends-on",
    "display": "Value set Syphilis condition",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/syphilis-condition"
  }, {
    "type": "depends-on",
    "display": "Value set Syphilis (Tests for Treponema pallidum Nucleic Acid)",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/syphilis-tests-for-treponema-pallidum-nucleic-acid"
  }, {
    "type": "depends-on",
    "display": "Value set Syphilis (Tests for Treponemal or Non Treponemal Antibody)",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/syphilis-tests-for-treponemal-or-non-treponemal-antibody"
  }, {
    "type": "depends-on",
    "display": "Value set Gonococcal Infections and Venereal Diseases",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonococcal-infections-and-venereal-diseases"
  }, {
    "type": "depends-on",
    "display": "Value set Gonorrhea [Neisseria gonorrhoeae] (Organism or Substance in Lab Results)",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-neisseria-gonorrhoeae-organism-or-substance-in-lab-results"
  }, {
    "type": "depends-on",
    "display": "Value set Gonorrhea [Neisseria species Unspecified] (Organism or Substance in Lab Results)",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-neisseria-species-unspecified-organism-or-substance-in-lab-results"
  }, {
    "type": "depends-on",
    "display": "Value set Gonorrhea [Secondary Sites Complications Chronic] (Disorders)",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-secondary-sites-complications-chronic-disorders"
  }, {
    "type": "depends-on",
    "display": "Value set Gonorrhea Tests for Neisseria gonorrhea by Culture",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-tests-for-neisseria-gonorrhea-by-culture"
  }, {
    "type": "depends-on",
    "display": "Value set Gonorrhea Tests and Chlamydia/Gonorrhea Combined Tests",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-tests-and-chlamydia-gonorrhea-combined-tests"
  }, {
    "type": "depends-on",
    "display": "Value set Gonorrhea (Tests for Neisseria gonorrhoeae Nucleic Acid)",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-tests-for-neisseria-gonorrhoeae-nucleic-acid"
  }, {
    "type": "depends-on",
    "display": "Value set Gonorrhea (Tests for Neisseria species by Culture and Identification Method)",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-tests-for-neisseria-species-by-culture-and-identification-method"
  }, {
    "type": "depends-on",
    "display": "Value set Gonorrhea test",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-test"
  }, {
    "type": "depends-on",
    "display": "Value set Chlamydia",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chlamydia"
  }, {
    "type": "depends-on",
    "display": "Value set Chlamydia Infections and Venereal Diseases",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chlamydia-infections-and-venereal-diseases"
  }, {
    "type": "depends-on",
    "display": "Value set Chlamydia trachomatis Infection [Secondary Sites Complications] (Disorders)",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chlamydia-trachomatis-infection-secondary-sites-complications-disorders"
  }, {
    "type": "depends-on",
    "display": "Value set Chlamydia trachomatis organism or Chlamydia trachomatis substance",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chlamydia-trachomatis-organism-or-chlamydia-trachomatis-substance"
  }, {
    "type": "depends-on",
    "display": "Value set Chlamydia Screening",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chlamydia-screening"
  }, {
    "type": "depends-on",
    "display": "Value set Chlamydia Trachomatis Tests, FPAR",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chlamydia-trachomatis-tests-fpar"
  }, {
    "type": "depends-on",
    "display": "Value set Tests for Chlamydia trachomatis Antigen",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/tests-for-chlamydia-trachomatis-antigen"
  }, {
    "type": "depends-on",
    "display": "Value set Tests for Chlamydia trachomatis by Culture and Identification Method)",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/tests-for-chlamydia-trachomatis-by-culture-and-identification-method"
  }, {
    "type": "depends-on",
    "display": "Value set Tests for Chlamydia trachomatis Nucleic Acid",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/tests-for-chlamydia-trachomatis-nucleic-acid"
  }, {
    "type": "depends-on",
    "display": "Value set Chlamydia test",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chlamydia-test"
  }, {
    "type": "depends-on",
    "display": "Value set Drug Rehabilitation",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/drug-rehabilitation"
  }, {
    "type": "depends-on",
    "display": "Value set Injection Findings",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/injection-findings"
  }, {
    "type": "depends-on",
    "display": "Value set IDU as a condition",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/idu-as-a-condition"
  }, {
    "type": "depends-on",
    "display": "Value set Injection Drug Use",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/injection-drug-use"
  }, {
    "type": "depends-on",
    "display": "Value set Pregnancy Encounters",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/pregnancy-encounters"
  }, {
    "type": "depends-on",
    "display": "Value set Maternal Care",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/maternal-care"
  }, {
    "type": "depends-on",
    "display": "Value set Pregnancy Conditions",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/pregnancy-conditions"
  }, {
    "type": "depends-on",
    "display": "Value set Pregnancy Supervision",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/pregnancy-supervision"
  }, {
    "type": "depends-on",
    "display": "Value set Pregnancy Procedures",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/pregnancy-procedures"
  }, {
    "type": "depends-on",
    "display": "Value set Pregnancy Observations",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/pregnancy-observations"
  }, {
    "type": "depends-on",
    "display": "Value set Post Exposure Prophylaxis",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/post-exposure-prophylaxis"
  } ],
  "parameter": [ {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  }, {
    "name": "HIV infection as a condition",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "HIV-1 HIV 2 Ab Ag tests",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "HIV Viral Load",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Hepatitis C Virus Infection (Disorders)",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Chronic Infection of liver due to Hepatitis C virus",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "HCV Infection (Organism or Substance in Lab Results)",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Hepatitis C condition",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Hepatitis C Ag",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Hepatitis C nucleic acid",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Hepatitis C virus antibody test using Immunoblotting (IB) method",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Hepatitis C virus antibody test",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Hepatitis C virus nucleic (RNA) test",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Syphilis",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Syphilis (Organism or Substance in Lab Results)",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Syphilis condition",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Syphilis (Tests for Treponema pallidum Nucleic Acid)",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Syphilis (Tests for Treponemal or Non Treponemal Antibody)",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Gonococcal Infections and Venereal Diseases",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Gonorrhea [Neisseria gonorrhoeae] (Organism or Substance in Lab Results)",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Gonorrhea [Neisseria species Unspecified] (Organism or Substance in Lab Results)",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Gonorrhea [Secondary Sites Complications Chronic] (Disorders)",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Gonorrhea Tests for Neisseria gonorrhea by Culture",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Gonorrhea Tests and Chlamydia/Gonorrhea Combined Tests",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Gonorrhea (Tests for Neisseria gonorrhoeae Nucleic Acid)",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Gonorrhea (Tests for Neisseria species by Culture and Identification Method)",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Gonorrhea test",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Chlamydia",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Chlamydia Infections and Venereal Diseases",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Chlamydia trachomatis Infection [Secondary Sites Complications] (Disorders)",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Chlamydia trachomatis organism or Chlamydia trachomatis substance",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Chlamydia Screening",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Chlamydia Trachomatis Tests, FPAR",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Tests for Chlamydia trachomatis Antigen",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Tests for Chlamydia trachomatis by Culture and Identification Method)",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Tests for Chlamydia trachomatis Nucleic Acid",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Chlamydia test",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Drug Rehabilitation",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Procedure"
  }, {
    "name": "Injection Findings",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "IDU as a condition",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Injection Drug Use",
    "use": "out",
    "min": 0,
    "max": "*"
  }, {
    "name": "Pregnancy Encounters",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Encounter"
  }, {
    "name": "Maternal Care",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Procedure"
  }, {
    "name": "Pregnancy Conditions",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Pregnancy Supervision",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Procedure"
  }, {
    "name": "Pregnancy Procedures",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Procedure"
  }, {
    "name": "Pregnancy Observations",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Post Exposure Prophylaxis",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Procedure"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hiv-infection-as-a-condition"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hiv-1-hiv-2-ab-ag-tests"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hiv-viral-load"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hepatitis-c-virus-infection-disorders"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chronic-infection-of-liver-due-to-hepatitis-c-virus"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hcv-infection-organism-or-substance-in-lab-results"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hepatitis-c-condition"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hepatitis-c-ag"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hepatitis-c-nucleic-acid"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hepatitis-c-virus-antibody-test-using-immunoblotting-ib-method"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hepatitis-c-virus-antibody-test"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hepatitis-c-virus-nucleic-rna-test"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/syphilis"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/syphilis-organism-or-substance-in-lab-results"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/syphilis-condition"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/syphilis-tests-for-treponema-pallidum-nucleic-acid"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/syphilis-tests-for-treponemal-or-non-treponemal-antibody"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonococcal-infections-and-venereal-diseases"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-neisseria-gonorrhoeae-organism-or-substance-in-lab-results"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-neisseria-species-unspecified-organism-or-substance-in-lab-results"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-secondary-sites-complications-chronic-disorders"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-tests-for-neisseria-gonorrhea-by-culture"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-tests-and-chlamydia-gonorrhea-combined-tests"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-tests-for-neisseria-gonorrhoeae-nucleic-acid"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-tests-for-neisseria-species-by-culture-and-identification-method"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-test"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chlamydia"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chlamydia-infections-and-venereal-diseases"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chlamydia-trachomatis-infection-secondary-sites-complications-disorders"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chlamydia-trachomatis-organism-or-chlamydia-trachomatis-substance"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chlamydia-screening"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chlamydia-trachomatis-tests-fpar"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/tests-for-chlamydia-trachomatis-antigen"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/tests-for-chlamydia-trachomatis-by-culture-and-identification-method"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/tests-for-chlamydia-trachomatis-nucleic-acid"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chlamydia-test"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/drug-rehabilitation"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/injection-findings"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/idu-as-a-condition"
    } ]
  }, {
    "profile": [ "http://hl7.org/fhir/StructureDefinition/MedicationStatement" ],
    "codeFilter": [ {
      "path": "medication",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/injection-drug-use"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/pregnancy-encounters"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/maternal-care"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/pregnancy-conditions"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/pregnancy-supervision"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/pregnancy-procedures"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/pregnancy-observations"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/post-exposure-prophylaxis"
    } ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": ""
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  }, {
    "contentType": "application/elm+json",
    "data": "ew0KICAgImxpYnJhcnkiIDogew0KICAgICAgImFubm90YXRpb24iIDogWyB7DQogICAgICAgICAidHJhbnNsYXRvck9wdGlvbnMiIDogIkVuYWJsZUxvY2F0b3JzLERpc2FibGVMaXN0RGVtb3Rpb24sRGlzYWJsZUxpc3RQcm9tb3Rpb24iLA0KICAgICAgICAgInR5cGUiIDogIkNxbFRvRWxtSW5mbyINCiAgICAgIH0gXSwNCiAgICAgICJpZGVudGlmaWVyIiA6IHsNCiAgICAgICAgICJpZCIgOiAiSElWRGF0YUVsZW1lbnRzIiwNCiAgICAgICAgICJzeXN0ZW0iIDogImh0dHA6Ly9maGlyLm9yZy9ndWlkZXMvbmFjaGMvaGl2LWNkcyINCiAgICAgIH0sDQogICAgICAic2NoZW1hSWRlbnRpZmllciIgOiB7DQogICAgICAgICAiaWQiIDogInVybjpobDctb3JnOmVsbSIsDQogICAgICAgICAidmVyc2lvbiIgOiAicjEiDQogICAgICB9LA0KICAgICAgInVzaW5ncyIgOiB7DQogICAgICAgICAiZGVmIiA6IFsgew0KICAgICAgICAgICAgImxvY2FsSWRlbnRpZmllciIgOiAiU3lzdGVtIiwNCiAgICAgICAgICAgICJ1cmkiIDogInVybjpobDctb3JnOmVsbS10eXBlczpyMSINCiAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICJsb2NhdG9yIiA6ICIzOjEtMzoyNiIsDQogICAgICAgICAgICAibG9jYWxJZGVudGlmaWVyIiA6ICJGSElSIiwNCiAgICAgICAgICAgICJ1cmkiIDogImh0dHA6Ly9obDcub3JnL2ZoaXIiLA0KICAgICAgICAgICAgInZlcnNpb24iIDogIjQuMC4xIg0KICAgICAgICAgfSBdDQogICAgICB9LA0KICAgICAgImluY2x1ZGVzIiA6IHsNCiAgICAgICAgICJkZWYiIDogWyB7DQogICAgICAgICAgICAibG9jYXRvciIgOiAiNToxLTU6MzUiLA0KICAgICAgICAgICAgImxvY2FsSWRlbnRpZmllciIgOiAiRkhJUkhlbHBlcnMiLA0KICAgICAgICAgICAgInBhdGgiIDogImh0dHA6Ly9maGlyLm9yZy9ndWlkZXMvbmFjaGMvaGl2LWNkcy9GSElSSGVscGVycyIsDQogICAgICAgICAgICAidmVyc2lvbiIgOiAiNC4wLjEiDQogICAgICAgICB9LCB7DQogICAgICAgICAgICAibG9jYXRvciIgOiAiNjoxLTY6MjgiLA0KICAgICAgICAgICAgImxvY2FsSWRlbnRpZmllciIgOiAiRkMiLA0KICAgICAgICAgICAgInBhdGgiIDogImh0dHA6Ly9maGlyLm9yZy9ndWlkZXMvbmFjaGMvaGl2LWNkcy9GSElSQ29tbW9uIg0KICAgICAgICAgfSwgew0KICAgICAgICAgICAgImxvY2F0b3IiIDogIjg6MS04OjI5IiwNCiAgICAgICAgICAgICJsb2NhbElkZW50aWZpZXIiIDogIk5DIiwNCiAgICAgICAgICAgICJwYXRoIiA6ICJodHRwOi8vZmhpci5vcmcvZ3VpZGVzL25hY2hjL2hpdi1jZHMvTkFDSENDb21tb24iDQogICAgICAgICB9LCB7DQogICAgICAgICAgICAibG9jYXRvciIgOiAiOToxLTk6MjciLA0KICAgICAgICAgICAgImxvY2FsSWRlbnRpZmllciIgOiAiQUMiLA0KICAgICAgICAgICAgInBhdGgiIDogImh0dHA6Ly9maGlyLm9yZy9ndWlkZXMvbmFjaGMvaGl2LWNkcy9ISVZDb21tb24iDQogICAgICAgICB9LCB7DQogICAgICAgICAgICAibG9jYXRvciIgOiAiMTA6MS0xMDoyOSIsDQogICAgICAgICAgICAibG9jYWxJZGVudGlmaWVyIiA6ICJDeCIsDQogICAgICAgICAgICAicGF0aCIgOiAiaHR0cDovL2ZoaXIub3JnL2d1aWRlcy9uYWNoYy9oaXYtY2RzL0hJVkNvbmNlcHRzIg0KICAgICAgICAgfSBdDQogICAgICB9LA0KICAgICAgImNvbnRleHRzIiA6IHsNCiAgICAgICAgICJkZWYiIDogWyB7DQogICAgICAgICAgICAibG9jYXRvciIgOiAiMTI6MS0xMjoxNSIsDQogICAgICAgICAgICAibmFtZSIgOiAiUGF0aWVudCINCiAgICAgICAgIH0gXQ0KICAgICAgfSwNCiAgICAgICJzdGF0ZW1lbnRzIiA6IHsNCiAgICAgICAgICJkZWYiIDogWyB7DQogICAgICAgICAgICAibG9jYXRvciIgOiAiMTI6MS0xMjoxNSIsDQogICAgICAgICAgICAibmFtZSIgOiAiUGF0aWVudCIsDQogICAgICAgICAgICAiY29udGV4dCIgOiAiUGF0aWVudCIsDQogICAgICAgICAgICAiZXhwcmVzc2lvbiIgOiB7DQogICAgICAgICAgICAgICAidHlwZSIgOiAiU2luZ2xldG9uRnJvbSIsDQogICAgICAgICAgICAgICAib3BlcmFuZCIgOiB7DQogICAgICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMTI6MS0xMjoxNSIsDQogICAgICAgICAgICAgICAgICAiZGF0YVR5cGUiIDogIntodHRwOi8vaGw3Lm9yZy9maGlyfVBhdGllbnQiLA0KICAgICAgICAgICAgICAgICAgInRlbXBsYXRlSWQiIDogImh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9QYXRpZW50IiwNCiAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJSZXRyaWV2ZSINCiAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICJsb2NhdG9yIiA6ICIxOToxLTIwOjQ4IiwNCiAgICAgICAgICAgICJuYW1lIiA6ICJISVYgaW5mZWN0aW9uIGFzIGEgY29uZGl0aW9uIiwNCiAgICAgICAgICAgICJjb250ZXh0IiA6ICJQYXRpZW50IiwNCiAgICAgICAgICAgICJhY2Nlc3NMZXZlbCIgOiAiUHVibGljIiwNCiAgICAgICAgICAgICJhbm5vdGF0aW9uIiA6IFsgew0KICAgICAgICAgICAgICAgInR5cGUiIDogIkFubm90YXRpb24iLA0KICAgICAgICAgICAgICAgInQiIDogWyB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGF0YUVsZW1lbnQiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5BMS5ERTEgSElWIGluZmVjdGlvbiBhcyBhIGNvbmRpdGlvbiINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJhY3Rpdml0eSIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkExIEhJViINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkZXNjcmlwdGlvbiIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIkhJViINCiAgICAgICAgICAgICAgIH0gXQ0KICAgICAgICAgICAgfSBdLA0KICAgICAgICAgICAgImV4cHJlc3Npb24iIDogew0KICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjIwOjMtMjA6NDgiLA0KICAgICAgICAgICAgICAgImRhdGFUeXBlIiA6ICJ7aHR0cDovL2hsNy5vcmcvZmhpcn1Db25kaXRpb24iLA0KICAgICAgICAgICAgICAgInRlbXBsYXRlSWQiIDogImh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9Db25kaXRpb24iLA0KICAgICAgICAgICAgICAgImNvZGVQcm9wZXJ0eSIgOiAiY29kZSIsDQogICAgICAgICAgICAgICAiY29kZUNvbXBhcmF0b3IiIDogImluIiwNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJSZXRyaWV2ZSIsDQogICAgICAgICAgICAgICAiY29kZXMiIDogew0KICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjIwOjE1LTIwOjQ3IiwNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJISVYgaW5mZWN0aW9uIGFzIGEgY29uZGl0aW9uIiwNCiAgICAgICAgICAgICAgICAgICJsaWJyYXJ5TmFtZSIgOiAiQ3giLA0KICAgICAgICAgICAgICAgICAgInR5cGUiIDogIlZhbHVlU2V0UmVmIg0KICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgfSwgew0KICAgICAgICAgICAgImxvY2F0b3IiIDogIjI3OjEtMjg6NDUiLA0KICAgICAgICAgICAgIm5hbWUiIDogIkhJVi0xIEhJViAyIEFiIEFnIHRlc3RzIiwNCiAgICAgICAgICAgICJjb250ZXh0IiA6ICJQYXRpZW50IiwNCiAgICAgICAgICAgICJhY2Nlc3NMZXZlbCIgOiAiUHVibGljIiwNCiAgICAgICAgICAgICJhbm5vdGF0aW9uIiA6IFsgew0KICAgICAgICAgICAgICAgInR5cGUiIDogIkFubm90YXRpb24iLA0KICAgICAgICAgICAgICAgInQiIDogWyB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGF0YUVsZW1lbnQiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5BMi5ERTEgSElWLTEgSElWIDIgQWIgQWcgdGVzdHMiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiYWN0aXZpdHkiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5BMiBISVYgdGVzdCINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkZXNjcmlwdGlvbiIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIkhJViBUZXN0Ig0KICAgICAgICAgICAgICAgfSBdDQogICAgICAgICAgICB9IF0sDQogICAgICAgICAgICAiZXhwcmVzc2lvbiIgOiB7DQogICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMjg6My0yODo0NSIsDQogICAgICAgICAgICAgICAiZGF0YVR5cGUiIDogIntodHRwOi8vaGw3Lm9yZy9maGlyfU9ic2VydmF0aW9uIiwNCiAgICAgICAgICAgICAgICJ0ZW1wbGF0ZUlkIiA6ICJodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vT2JzZXJ2YXRpb24iLA0KICAgICAgICAgICAgICAgImNvZGVQcm9wZXJ0eSIgOiAiY29kZSIsDQogICAgICAgICAgICAgICAiY29kZUNvbXBhcmF0b3IiIDogImluIiwNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJSZXRyaWV2ZSIsDQogICAgICAgICAgICAgICAiY29kZXMiIDogew0KICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjI4OjE3LTI4OjQ0IiwNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJISVYtMSBISVYgMiBBYiBBZyB0ZXN0cyIsDQogICAgICAgICAgICAgICAgICAibGlicmFyeU5hbWUiIDogIkN4IiwNCiAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJWYWx1ZVNldFJlZiINCiAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICJsb2NhdG9yIiA6ICIzNToxLTM2OjM2IiwNCiAgICAgICAgICAgICJuYW1lIiA6ICJISVYgVmlyYWwgTG9hZCIsDQogICAgICAgICAgICAiY29udGV4dCIgOiAiUGF0aWVudCIsDQogICAgICAgICAgICAiYWNjZXNzTGV2ZWwiIDogIlB1YmxpYyIsDQogICAgICAgICAgICAiYW5ub3RhdGlvbiIgOiBbIHsNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJBbm5vdGF0aW9uIiwNCiAgICAgICAgICAgICAgICJ0IiA6IFsgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRhdGFFbGVtZW50IiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiTkFDSEMuQTIuREUxNzIgSElWIFZpcmFsIExvYWQiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiYWN0aXZpdHkiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5BMiBISVYgdGVzdCINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkZXNjcmlwdGlvbiIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIkhJViBUZXN0Ig0KICAgICAgICAgICAgICAgfSBdDQogICAgICAgICAgICB9IF0sDQogICAgICAgICAgICAiZXhwcmVzc2lvbiIgOiB7DQogICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMzY6My0zNjozNiIsDQogICAgICAgICAgICAgICAiZGF0YVR5cGUiIDogIntodHRwOi8vaGw3Lm9yZy9maGlyfU9ic2VydmF0aW9uIiwNCiAgICAgICAgICAgICAgICJ0ZW1wbGF0ZUlkIiA6ICJodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vT2JzZXJ2YXRpb24iLA0KICAgICAgICAgICAgICAgImNvZGVQcm9wZXJ0eSIgOiAiY29kZSIsDQogICAgICAgICAgICAgICAiY29kZUNvbXBhcmF0b3IiIDogImluIiwNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJSZXRyaWV2ZSIsDQogICAgICAgICAgICAgICAiY29kZXMiIDogew0KICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjM2OjE3LTM2OjM1IiwNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJISVYgVmlyYWwgTG9hZCIsDQogICAgICAgICAgICAgICAgICAibGlicmFyeU5hbWUiIDogIkN4IiwNCiAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJWYWx1ZVNldFJlZiINCiAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICJsb2NhdG9yIiA6ICI0MzoxLTQ0OjU5IiwNCiAgICAgICAgICAgICJuYW1lIiA6ICJIZXBhdGl0aXMgQyBWaXJ1cyBJbmZlY3Rpb24gKERpc29yZGVycykiLA0KICAgICAgICAgICAgImNvbnRleHQiIDogIlBhdGllbnQiLA0KICAgICAgICAgICAgImFjY2Vzc0xldmVsIiA6ICJQdWJsaWMiLA0KICAgICAgICAgICAgImFubm90YXRpb24iIDogWyB7DQogICAgICAgICAgICAgICAidHlwZSIgOiAiQW5ub3RhdGlvbiIsDQogICAgICAgICAgICAgICAidCIgOiBbIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkYXRhRWxlbWVudCIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkIxLkRFMSBIZXBhdGl0aXMgQyBWaXJ1cyBJbmZlY3Rpb24gKERpc29yZGVycykiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiYWN0aXZpdHkiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5CMSBIQ1YiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGVzY3JpcHRpb24iLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJIQ1YiDQogICAgICAgICAgICAgICB9IF0NCiAgICAgICAgICAgIH0gXSwNCiAgICAgICAgICAgICJleHByZXNzaW9uIiA6IHsNCiAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI0NDozLTQ0OjU5IiwNCiAgICAgICAgICAgICAgICJkYXRhVHlwZSIgOiAie2h0dHA6Ly9obDcub3JnL2ZoaXJ9Q29uZGl0aW9uIiwNCiAgICAgICAgICAgICAgICJ0ZW1wbGF0ZUlkIiA6ICJodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vQ29uZGl0aW9uIiwNCiAgICAgICAgICAgICAgICJjb2RlUHJvcGVydHkiIDogImNvZGUiLA0KICAgICAgICAgICAgICAgImNvZGVDb21wYXJhdG9yIiA6ICJpbiIsDQogICAgICAgICAgICAgICAidHlwZSIgOiAiUmV0cmlldmUiLA0KICAgICAgICAgICAgICAgImNvZGVzIiA6IHsNCiAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI0NDoxNS00NDo1OCIsDQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiSGVwYXRpdGlzIEMgVmlydXMgSW5mZWN0aW9uIChEaXNvcmRlcnMpIiwNCiAgICAgICAgICAgICAgICAgICJsaWJyYXJ5TmFtZSIgOiAiQ3giLA0KICAgICAgICAgICAgICAgICAgInR5cGUiIDogIlZhbHVlU2V0UmVmIg0KICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgfSwgew0KICAgICAgICAgICAgImxvY2F0b3IiIDogIjUxOjEtNTI6NzEiLA0KICAgICAgICAgICAgIm5hbWUiIDogIkNocm9uaWMgSW5mZWN0aW9uIG9mIGxpdmVyIGR1ZSB0byBIZXBhdGl0aXMgQyB2aXJ1cyIsDQogICAgICAgICAgICAiY29udGV4dCIgOiAiUGF0aWVudCIsDQogICAgICAgICAgICAiYWNjZXNzTGV2ZWwiIDogIlB1YmxpYyIsDQogICAgICAgICAgICAiYW5ub3RhdGlvbiIgOiBbIHsNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJBbm5vdGF0aW9uIiwNCiAgICAgICAgICAgICAgICJ0IiA6IFsgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRhdGFFbGVtZW50IiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiTkFDSEMuQjEuREUzMSBDaHJvbmljIEluZmVjdGlvbiBvZiBsaXZlciBkdWUgdG8gSGVwYXRpdGlzIEMgdmlydXMiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiYWN0aXZpdHkiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5CMSBIQ1YiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGVzY3JpcHRpb24iLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJIQ1YiDQogICAgICAgICAgICAgICB9IF0NCiAgICAgICAgICAgIH0gXSwNCiAgICAgICAgICAgICJleHByZXNzaW9uIiA6IHsNCiAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI1MjozLTUyOjcxIiwNCiAgICAgICAgICAgICAgICJkYXRhVHlwZSIgOiAie2h0dHA6Ly9obDcub3JnL2ZoaXJ9Q29uZGl0aW9uIiwNCiAgICAgICAgICAgICAgICJ0ZW1wbGF0ZUlkIiA6ICJodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vQ29uZGl0aW9uIiwNCiAgICAgICAgICAgICAgICJjb2RlUHJvcGVydHkiIDogImNvZGUiLA0KICAgICAgICAgICAgICAgImNvZGVDb21wYXJhdG9yIiA6ICJpbiIsDQogICAgICAgICAgICAgICAidHlwZSIgOiAiUmV0cmlldmUiLA0KICAgICAgICAgICAgICAgImNvZGVzIiA6IHsNCiAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI1MjoxNS01Mjo3MCIsDQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiQ2hyb25pYyBJbmZlY3Rpb24gb2YgbGl2ZXIgZHVlIHRvIEhlcGF0aXRpcyBDIHZpcnVzIiwNCiAgICAgICAgICAgICAgICAgICJsaWJyYXJ5TmFtZSIgOiAiQ3giLA0KICAgICAgICAgICAgICAgICAgInR5cGUiIDogIlZhbHVlU2V0UmVmIg0KICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgfSwgew0KICAgICAgICAgICAgImxvY2F0b3IiIDogIjU5OjEtNjA6NzIiLA0KICAgICAgICAgICAgIm5hbWUiIDogIkhDViBJbmZlY3Rpb24gKE9yZ2FuaXNtIG9yIFN1YnN0YW5jZSBpbiBMYWIgUmVzdWx0cykiLA0KICAgICAgICAgICAgImNvbnRleHQiIDogIlBhdGllbnQiLA0KICAgICAgICAgICAgImFjY2Vzc0xldmVsIiA6ICJQdWJsaWMiLA0KICAgICAgICAgICAgImFubm90YXRpb24iIDogWyB7DQogICAgICAgICAgICAgICAidHlwZSIgOiAiQW5ub3RhdGlvbiIsDQogICAgICAgICAgICAgICAidCIgOiBbIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkYXRhRWxlbWVudCIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkIxLkRFMzQgSENWIEluZmVjdGlvbiAoT3JnYW5pc20gb3IgU3Vic3RhbmNlIGluIExhYiBSZXN1bHRzKSINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJhY3Rpdml0eSIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkIxIEhDViINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkZXNjcmlwdGlvbiIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIkhDViINCiAgICAgICAgICAgICAgIH0gXQ0KICAgICAgICAgICAgfSBdLA0KICAgICAgICAgICAgImV4cHJlc3Npb24iIDogew0KICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjYwOjMtNjA6NzIiLA0KICAgICAgICAgICAgICAgImRhdGFUeXBlIiA6ICJ7aHR0cDovL2hsNy5vcmcvZmhpcn1Db25kaXRpb24iLA0KICAgICAgICAgICAgICAgInRlbXBsYXRlSWQiIDogImh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9Db25kaXRpb24iLA0KICAgICAgICAgICAgICAgImNvZGVQcm9wZXJ0eSIgOiAiY29kZSIsDQogICAgICAgICAgICAgICAiY29kZUNvbXBhcmF0b3IiIDogImluIiwNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJSZXRyaWV2ZSIsDQogICAgICAgICAgICAgICAiY29kZXMiIDogew0KICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjYwOjE1LTYwOjcxIiwNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJIQ1YgSW5mZWN0aW9uIChPcmdhbmlzbSBvciBTdWJzdGFuY2UgaW4gTGFiIFJlc3VsdHMpIiwNCiAgICAgICAgICAgICAgICAgICJsaWJyYXJ5TmFtZSIgOiAiQ3giLA0KICAgICAgICAgICAgICAgICAgInR5cGUiIDogIlZhbHVlU2V0UmVmIg0KICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgfSwgew0KICAgICAgICAgICAgImxvY2F0b3IiIDogIjY3OjEtNjg6NDEiLA0KICAgICAgICAgICAgIm5hbWUiIDogIkhlcGF0aXRpcyBDIGNvbmRpdGlvbiIsDQogICAgICAgICAgICAiY29udGV4dCIgOiAiUGF0aWVudCIsDQogICAgICAgICAgICAiYWNjZXNzTGV2ZWwiIDogIlB1YmxpYyIsDQogICAgICAgICAgICAiYW5ub3RhdGlvbiIgOiBbIHsNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJBbm5vdGF0aW9uIiwNCiAgICAgICAgICAgICAgICJ0IiA6IFsgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRhdGFFbGVtZW50IiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiTkFDSEMuQjEuREU2NSBIZXBhdGl0aXMgQyBjb25kaXRpb24iDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiYWN0aXZpdHkiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5CMSBIQ1YiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGVzY3JpcHRpb24iLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJIQ1YiDQogICAgICAgICAgICAgICB9IF0NCiAgICAgICAgICAgIH0gXSwNCiAgICAgICAgICAgICJleHByZXNzaW9uIiA6IHsNCiAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI2ODozLTY4OjQxIiwNCiAgICAgICAgICAgICAgICJkYXRhVHlwZSIgOiAie2h0dHA6Ly9obDcub3JnL2ZoaXJ9Q29uZGl0aW9uIiwNCiAgICAgICAgICAgICAgICJ0ZW1wbGF0ZUlkIiA6ICJodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vQ29uZGl0aW9uIiwNCiAgICAgICAgICAgICAgICJjb2RlUHJvcGVydHkiIDogImNvZGUiLA0KICAgICAgICAgICAgICAgImNvZGVDb21wYXJhdG9yIiA6ICJpbiIsDQogICAgICAgICAgICAgICAidHlwZSIgOiAiUmV0cmlldmUiLA0KICAgICAgICAgICAgICAgImNvZGVzIiA6IHsNCiAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI2ODoxNS02ODo0MCIsDQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiSGVwYXRpdGlzIEMgY29uZGl0aW9uIiwNCiAgICAgICAgICAgICAgICAgICJsaWJyYXJ5TmFtZSIgOiAiQ3giLA0KICAgICAgICAgICAgICAgICAgInR5cGUiIDogIlZhbHVlU2V0UmVmIg0KICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgfSwgew0KICAgICAgICAgICAgImxvY2F0b3IiIDogIjc1OjEtNzY6MzYiLA0KICAgICAgICAgICAgIm5hbWUiIDogIkhlcGF0aXRpcyBDIEFnIiwNCiAgICAgICAgICAgICJjb250ZXh0IiA6ICJQYXRpZW50IiwNCiAgICAgICAgICAgICJhY2Nlc3NMZXZlbCIgOiAiUHVibGljIiwNCiAgICAgICAgICAgICJhbm5vdGF0aW9uIiA6IFsgew0KICAgICAgICAgICAgICAgInR5cGUiIDogIkFubm90YXRpb24iLA0KICAgICAgICAgICAgICAgInQiIDogWyB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGF0YUVsZW1lbnQiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5CMi5ERTEgSGVwYXRpdGlzIEMgQWciDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiYWN0aXZpdHkiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5CMiBIQ1YgdGVzdCINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkZXNjcmlwdGlvbiIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIkhDViBUZXN0Ig0KICAgICAgICAgICAgICAgfSBdDQogICAgICAgICAgICB9IF0sDQogICAgICAgICAgICAiZXhwcmVzc2lvbiIgOiB7DQogICAgICAgICAgICAgICAibG9jYXRvciIgOiAiNzY6My03NjozNiIsDQogICAgICAgICAgICAgICAiZGF0YVR5cGUiIDogIntodHRwOi8vaGw3Lm9yZy9maGlyfU9ic2VydmF0aW9uIiwNCiAgICAgICAgICAgICAgICJ0ZW1wbGF0ZUlkIiA6ICJodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vT2JzZXJ2YXRpb24iLA0KICAgICAgICAgICAgICAgImNvZGVQcm9wZXJ0eSIgOiAiY29kZSIsDQogICAgICAgICAgICAgICAiY29kZUNvbXBhcmF0b3IiIDogImluIiwNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJSZXRyaWV2ZSIsDQogICAgICAgICAgICAgICAiY29kZXMiIDogew0KICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjc2OjE3LTc2OjM1IiwNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJIZXBhdGl0aXMgQyBBZyIsDQogICAgICAgICAgICAgICAgICAibGlicmFyeU5hbWUiIDogIkN4IiwNCiAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJWYWx1ZVNldFJlZiINCiAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICJsb2NhdG9yIiA6ICI4MzoxLTg0OjQ2IiwNCiAgICAgICAgICAgICJuYW1lIiA6ICJIZXBhdGl0aXMgQyBudWNsZWljIGFjaWQiLA0KICAgICAgICAgICAgImNvbnRleHQiIDogIlBhdGllbnQiLA0KICAgICAgICAgICAgImFjY2Vzc0xldmVsIiA6ICJQdWJsaWMiLA0KICAgICAgICAgICAgImFubm90YXRpb24iIDogWyB7DQogICAgICAgICAgICAgICAidHlwZSIgOiAiQW5ub3RhdGlvbiIsDQogICAgICAgICAgICAgICAidCIgOiBbIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkYXRhRWxlbWVudCIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkIyLkRFNCBIZXBhdGl0aXMgQyBudWNsZWljIGFjaWQiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiYWN0aXZpdHkiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5CMiBIQ1YgdGVzdCINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkZXNjcmlwdGlvbiIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIkhDViBUZXN0Ig0KICAgICAgICAgICAgICAgfSBdDQogICAgICAgICAgICB9IF0sDQogICAgICAgICAgICAiZXhwcmVzc2lvbiIgOiB7DQogICAgICAgICAgICAgICAibG9jYXRvciIgOiAiODQ6My04NDo0NiIsDQogICAgICAgICAgICAgICAiZGF0YVR5cGUiIDogIntodHRwOi8vaGw3Lm9yZy9maGlyfU9ic2VydmF0aW9uIiwNCiAgICAgICAgICAgICAgICJ0ZW1wbGF0ZUlkIiA6ICJodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vT2JzZXJ2YXRpb24iLA0KICAgICAgICAgICAgICAgImNvZGVQcm9wZXJ0eSIgOiAiY29kZSIsDQogICAgICAgICAgICAgICAiY29kZUNvbXBhcmF0b3IiIDogImluIiwNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJSZXRyaWV2ZSIsDQogICAgICAgICAgICAgICAiY29kZXMiIDogew0KICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjg0OjE3LTg0OjQ1IiwNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJIZXBhdGl0aXMgQyBudWNsZWljIGFjaWQiLA0KICAgICAgICAgICAgICAgICAgImxpYnJhcnlOYW1lIiA6ICJDeCIsDQogICAgICAgICAgICAgICAgICAidHlwZSIgOiAiVmFsdWVTZXRSZWYiDQogICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICB9LCB7DQogICAgICAgICAgICAibG9jYXRvciIgOiAiOTE6MS05Mjo4NiIsDQogICAgICAgICAgICAibmFtZSIgOiAiSGVwYXRpdGlzIEMgdmlydXMgYW50aWJvZHkgdGVzdCB1c2luZyBJbW11bm9ibG90dGluZyAoSUIpIG1ldGhvZCIsDQogICAgICAgICAgICAiY29udGV4dCIgOiAiUGF0aWVudCIsDQogICAgICAgICAgICAiYWNjZXNzTGV2ZWwiIDogIlB1YmxpYyIsDQogICAgICAgICAgICAiYW5ub3RhdGlvbiIgOiBbIHsNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJBbm5vdGF0aW9uIiwNCiAgICAgICAgICAgICAgICJ0IiA6IFsgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRhdGFFbGVtZW50IiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiTkFDSEMuQjIuREU0MCBIZXBhdGl0aXMgQyB2aXJ1cyBhbnRpYm9keSB0ZXN0IHVzaW5nIEltbXVub2Jsb3R0aW5nIChJQikgbWV0aG9kIg0KICAgICAgICAgICAgICAgfSwgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImFjdGl2aXR5IiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiTkFDSEMuQjIgSENWIHRlc3QiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGVzY3JpcHRpb24iLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJIQ1YgVGVzdCINCiAgICAgICAgICAgICAgIH0gXQ0KICAgICAgICAgICAgfSBdLA0KICAgICAgICAgICAgImV4cHJlc3Npb24iIDogew0KICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjkyOjMtOTI6ODYiLA0KICAgICAgICAgICAgICAgImRhdGFUeXBlIiA6ICJ7aHR0cDovL2hsNy5vcmcvZmhpcn1PYnNlcnZhdGlvbiIsDQogICAgICAgICAgICAgICAidGVtcGxhdGVJZCIgOiAiaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL09ic2VydmF0aW9uIiwNCiAgICAgICAgICAgICAgICJjb2RlUHJvcGVydHkiIDogImNvZGUiLA0KICAgICAgICAgICAgICAgImNvZGVDb21wYXJhdG9yIiA6ICJpbiIsDQogICAgICAgICAgICAgICAidHlwZSIgOiAiUmV0cmlldmUiLA0KICAgICAgICAgICAgICAgImNvZGVzIiA6IHsNCiAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICI5MjoxNy05Mjo4NSIsDQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiSGVwYXRpdGlzIEMgdmlydXMgYW50aWJvZHkgdGVzdCB1c2luZyBJbW11bm9ibG90dGluZyAoSUIpIG1ldGhvZCIsDQogICAgICAgICAgICAgICAgICAibGlicmFyeU5hbWUiIDogIkN4IiwNCiAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJWYWx1ZVNldFJlZiINCiAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICJsb2NhdG9yIiA6ICI5OToxLTEwMDo1MyIsDQogICAgICAgICAgICAibmFtZSIgOiAiSGVwYXRpdGlzIEMgdmlydXMgYW50aWJvZHkgdGVzdCIsDQogICAgICAgICAgICAiY29udGV4dCIgOiAiUGF0aWVudCIsDQogICAgICAgICAgICAiYWNjZXNzTGV2ZWwiIDogIlB1YmxpYyIsDQogICAgICAgICAgICAiYW5ub3RhdGlvbiIgOiBbIHsNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJBbm5vdGF0aW9uIiwNCiAgICAgICAgICAgICAgICJ0IiA6IFsgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRhdGFFbGVtZW50IiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiTkFDSEMuQjIuREU2MCBIZXBhdGl0aXMgQyB2aXJ1cyBhbnRpYm9keSB0ZXN0Ig0KICAgICAgICAgICAgICAgfSwgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImFjdGl2aXR5IiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiTkFDSEMuQjIgSENWIHRlc3QiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGVzY3JpcHRpb24iLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJIQ1YgVGVzdCINCiAgICAgICAgICAgICAgIH0gXQ0KICAgICAgICAgICAgfSBdLA0KICAgICAgICAgICAgImV4cHJlc3Npb24iIDogew0KICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjEwMDozLTEwMDo1MyIsDQogICAgICAgICAgICAgICAiZGF0YVR5cGUiIDogIntodHRwOi8vaGw3Lm9yZy9maGlyfU9ic2VydmF0aW9uIiwNCiAgICAgICAgICAgICAgICJ0ZW1wbGF0ZUlkIiA6ICJodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vT2JzZXJ2YXRpb24iLA0KICAgICAgICAgICAgICAgImNvZGVQcm9wZXJ0eSIgOiAiY29kZSIsDQogICAgICAgICAgICAgICAiY29kZUNvbXBhcmF0b3IiIDogImluIiwNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJSZXRyaWV2ZSIsDQogICAgICAgICAgICAgICAiY29kZXMiIDogew0KICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjEwMDoxNy0xMDA6NTIiLA0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogIkhlcGF0aXRpcyBDIHZpcnVzIGFudGlib2R5IHRlc3QiLA0KICAgICAgICAgICAgICAgICAgImxpYnJhcnlOYW1lIiA6ICJDeCIsDQogICAgICAgICAgICAgICAgICAidHlwZSIgOiAiVmFsdWVTZXRSZWYiDQogICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICB9LCB7DQogICAgICAgICAgICAibG9jYXRvciIgOiAiMTA3OjEtMTA4OjU4IiwNCiAgICAgICAgICAgICJuYW1lIiA6ICJIZXBhdGl0aXMgQyB2aXJ1cyBudWNsZWljIChSTkEpIHRlc3QiLA0KICAgICAgICAgICAgImNvbnRleHQiIDogIlBhdGllbnQiLA0KICAgICAgICAgICAgImFjY2Vzc0xldmVsIiA6ICJQdWJsaWMiLA0KICAgICAgICAgICAgImFubm90YXRpb24iIDogWyB7DQogICAgICAgICAgICAgICAidHlwZSIgOiAiQW5ub3RhdGlvbiIsDQogICAgICAgICAgICAgICAidCIgOiBbIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkYXRhRWxlbWVudCIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkIyLkRFODAgSGVwYXRpdGlzIEMgdmlydXMgbnVjbGVpYyAoUk5BKSB0ZXN0Ig0KICAgICAgICAgICAgICAgfSwgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImFjdGl2aXR5IiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiTkFDSEMuQjIgSENWIHRlc3QiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGVzY3JpcHRpb24iLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJIQ1YgVGVzdCINCiAgICAgICAgICAgICAgIH0gXQ0KICAgICAgICAgICAgfSBdLA0KICAgICAgICAgICAgImV4cHJlc3Npb24iIDogew0KICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjEwODozLTEwODo1OCIsDQogICAgICAgICAgICAgICAiZGF0YVR5cGUiIDogIntodHRwOi8vaGw3Lm9yZy9maGlyfU9ic2VydmF0aW9uIiwNCiAgICAgICAgICAgICAgICJ0ZW1wbGF0ZUlkIiA6ICJodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vT2JzZXJ2YXRpb24iLA0KICAgICAgICAgICAgICAgImNvZGVQcm9wZXJ0eSIgOiAiY29kZSIsDQogICAgICAgICAgICAgICAiY29kZUNvbXBhcmF0b3IiIDogImluIiwNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJSZXRyaWV2ZSIsDQogICAgICAgICAgICAgICAiY29kZXMiIDogew0KICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjEwODoxNy0xMDg6NTciLA0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogIkhlcGF0aXRpcyBDIHZpcnVzIG51Y2xlaWMgKFJOQSkgdGVzdCIsDQogICAgICAgICAgICAgICAgICAibGlicmFyeU5hbWUiIDogIkN4IiwNCiAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJWYWx1ZVNldFJlZiINCiAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICJsb2NhdG9yIiA6ICIxMTU6MS0xMTY6MjgiLA0KICAgICAgICAgICAgIm5hbWUiIDogIlN5cGhpbGlzIiwNCiAgICAgICAgICAgICJjb250ZXh0IiA6ICJQYXRpZW50IiwNCiAgICAgICAgICAgICJhY2Nlc3NMZXZlbCIgOiAiUHVibGljIiwNCiAgICAgICAgICAgICJhbm5vdGF0aW9uIiA6IFsgew0KICAgICAgICAgICAgICAgInR5cGUiIDogIkFubm90YXRpb24iLA0KICAgICAgICAgICAgICAgInQiIDogWyB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGF0YUVsZW1lbnQiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5DMS5ERTEgU3lwaGlsaXMiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiYWN0aXZpdHkiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5DMSBTeXBoaWxpcyINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkZXNjcmlwdGlvbiIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIlN5cGhpbGlzIg0KICAgICAgICAgICAgICAgfSBdDQogICAgICAgICAgICB9IF0sDQogICAgICAgICAgICAiZXhwcmVzc2lvbiIgOiB7DQogICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMTE2OjMtMTE2OjI4IiwNCiAgICAgICAgICAgICAgICJkYXRhVHlwZSIgOiAie2h0dHA6Ly9obDcub3JnL2ZoaXJ9Q29uZGl0aW9uIiwNCiAgICAgICAgICAgICAgICJ0ZW1wbGF0ZUlkIiA6ICJodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vQ29uZGl0aW9uIiwNCiAgICAgICAgICAgICAgICJjb2RlUHJvcGVydHkiIDogImNvZGUiLA0KICAgICAgICAgICAgICAgImNvZGVDb21wYXJhdG9yIiA6ICJpbiIsDQogICAgICAgICAgICAgICAidHlwZSIgOiAiUmV0cmlldmUiLA0KICAgICAgICAgICAgICAgImNvZGVzIiA6IHsNCiAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIxMTY6MTUtMTE2OjI3IiwNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJTeXBoaWxpcyIsDQogICAgICAgICAgICAgICAgICAibGlicmFyeU5hbWUiIDogIkN4IiwNCiAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJWYWx1ZVNldFJlZiINCiAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICJsb2NhdG9yIiA6ICIxMjM6MS0xMjQ6NjciLA0KICAgICAgICAgICAgIm5hbWUiIDogIlN5cGhpbGlzIChPcmdhbmlzbSBvciBTdWJzdGFuY2UgaW4gTGFiIFJlc3VsdHMpIiwNCiAgICAgICAgICAgICJjb250ZXh0IiA6ICJQYXRpZW50IiwNCiAgICAgICAgICAgICJhY2Nlc3NMZXZlbCIgOiAiUHVibGljIiwNCiAgICAgICAgICAgICJhbm5vdGF0aW9uIiA6IFsgew0KICAgICAgICAgICAgICAgInR5cGUiIDogIkFubm90YXRpb24iLA0KICAgICAgICAgICAgICAgInQiIDogWyB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGF0YUVsZW1lbnQiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5DMS5ERTE4NCBTeXBoaWxpcyAoT3JnYW5pc20gb3IgU3Vic3RhbmNlIGluIExhYiBSZXN1bHRzKSINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJhY3Rpdml0eSIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkMxIFN5cGhpbGlzIg0KICAgICAgICAgICAgICAgfSwgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRlc2NyaXB0aW9uIiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiU3lwaGlsaXMiDQogICAgICAgICAgICAgICB9IF0NCiAgICAgICAgICAgIH0gXSwNCiAgICAgICAgICAgICJleHByZXNzaW9uIiA6IHsNCiAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIxMjQ6My0xMjQ6NjciLA0KICAgICAgICAgICAgICAgImRhdGFUeXBlIiA6ICJ7aHR0cDovL2hsNy5vcmcvZmhpcn1Db25kaXRpb24iLA0KICAgICAgICAgICAgICAgInRlbXBsYXRlSWQiIDogImh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9Db25kaXRpb24iLA0KICAgICAgICAgICAgICAgImNvZGVQcm9wZXJ0eSIgOiAiY29kZSIsDQogICAgICAgICAgICAgICAiY29kZUNvbXBhcmF0b3IiIDogImluIiwNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJSZXRyaWV2ZSIsDQogICAgICAgICAgICAgICAiY29kZXMiIDogew0KICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjEyNDoxNS0xMjQ6NjYiLA0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogIlN5cGhpbGlzIChPcmdhbmlzbSBvciBTdWJzdGFuY2UgaW4gTGFiIFJlc3VsdHMpIiwNCiAgICAgICAgICAgICAgICAgICJsaWJyYXJ5TmFtZSIgOiAiQ3giLA0KICAgICAgICAgICAgICAgICAgInR5cGUiIDogIlZhbHVlU2V0UmVmIg0KICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgfSwgew0KICAgICAgICAgICAgImxvY2F0b3IiIDogIjEzMToxLTEzMjozOCIsDQogICAgICAgICAgICAibmFtZSIgOiAiU3lwaGlsaXMgY29uZGl0aW9uIiwNCiAgICAgICAgICAgICJjb250ZXh0IiA6ICJQYXRpZW50IiwNCiAgICAgICAgICAgICJhY2Nlc3NMZXZlbCIgOiAiUHVibGljIiwNCiAgICAgICAgICAgICJhbm5vdGF0aW9uIiA6IFsgew0KICAgICAgICAgICAgICAgInR5cGUiIDogIkFubm90YXRpb24iLA0KICAgICAgICAgICAgICAgInQiIDogWyB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGF0YUVsZW1lbnQiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5DMS5ERTE5MSBTeXBoaWxpcyBjb25kaXRpb24iDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiYWN0aXZpdHkiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5DMSBTeXBoaWxpcyINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkZXNjcmlwdGlvbiIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIlN5cGhpbGlzIg0KICAgICAgICAgICAgICAgfSBdDQogICAgICAgICAgICB9IF0sDQogICAgICAgICAgICAiZXhwcmVzc2lvbiIgOiB7DQogICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMTMyOjMtMTMyOjM4IiwNCiAgICAgICAgICAgICAgICJkYXRhVHlwZSIgOiAie2h0dHA6Ly9obDcub3JnL2ZoaXJ9Q29uZGl0aW9uIiwNCiAgICAgICAgICAgICAgICJ0ZW1wbGF0ZUlkIiA6ICJodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vQ29uZGl0aW9uIiwNCiAgICAgICAgICAgICAgICJjb2RlUHJvcGVydHkiIDogImNvZGUiLA0KICAgICAgICAgICAgICAgImNvZGVDb21wYXJhdG9yIiA6ICJpbiIsDQogICAgICAgICAgICAgICAidHlwZSIgOiAiUmV0cmlldmUiLA0KICAgICAgICAgICAgICAgImNvZGVzIiA6IHsNCiAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIxMzI6MTUtMTMyOjM3IiwNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJTeXBoaWxpcyBjb25kaXRpb24iLA0KICAgICAgICAgICAgICAgICAgImxpYnJhcnlOYW1lIiA6ICJDeCIsDQogICAgICAgICAgICAgICAgICAidHlwZSIgOiAiVmFsdWVTZXRSZWYiDQogICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICB9LCB7DQogICAgICAgICAgICAibG9jYXRvciIgOiAiMTM5OjEtMTQwOjc0IiwNCiAgICAgICAgICAgICJuYW1lIiA6ICJTeXBoaWxpcyAoVGVzdHMgZm9yIFRyZXBvbmVtYSBwYWxsaWR1bSBOdWNsZWljIEFjaWQpIiwNCiAgICAgICAgICAgICJjb250ZXh0IiA6ICJQYXRpZW50IiwNCiAgICAgICAgICAgICJhY2Nlc3NMZXZlbCIgOiAiUHVibGljIiwNCiAgICAgICAgICAgICJhbm5vdGF0aW9uIiA6IFsgew0KICAgICAgICAgICAgICAgInR5cGUiIDogIkFubm90YXRpb24iLA0KICAgICAgICAgICAgICAgInQiIDogWyB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGF0YUVsZW1lbnQiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5DMi5ERTEgU3lwaGlsaXMgKFRlc3RzIGZvciBUcmVwb25lbWEgcGFsbGlkdW0gTnVjbGVpYyBBY2lkKSINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJhY3Rpdml0eSIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkMyIFN5cGhpbGlzIHRlc3QiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGVzY3JpcHRpb24iLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJTeXBoaWxpcyBUZXN0Ig0KICAgICAgICAgICAgICAgfSBdDQogICAgICAgICAgICB9IF0sDQogICAgICAgICAgICAiZXhwcmVzc2lvbiIgOiB7DQogICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMTQwOjMtMTQwOjc0IiwNCiAgICAgICAgICAgICAgICJkYXRhVHlwZSIgOiAie2h0dHA6Ly9obDcub3JnL2ZoaXJ9T2JzZXJ2YXRpb24iLA0KICAgICAgICAgICAgICAgInRlbXBsYXRlSWQiIDogImh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9PYnNlcnZhdGlvbiIsDQogICAgICAgICAgICAgICAiY29kZVByb3BlcnR5IiA6ICJjb2RlIiwNCiAgICAgICAgICAgICAgICJjb2RlQ29tcGFyYXRvciIgOiAiaW4iLA0KICAgICAgICAgICAgICAgInR5cGUiIDogIlJldHJpZXZlIiwNCiAgICAgICAgICAgICAgICJjb2RlcyIgOiB7DQogICAgICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMTQwOjE3LTE0MDo3MyIsDQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiU3lwaGlsaXMgKFRlc3RzIGZvciBUcmVwb25lbWEgcGFsbGlkdW0gTnVjbGVpYyBBY2lkKSIsDQogICAgICAgICAgICAgICAgICAibGlicmFyeU5hbWUiIDogIkN4IiwNCiAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJWYWx1ZVNldFJlZiINCiAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICJsb2NhdG9yIiA6ICIxNDc6MS0xNDg6ODAiLA0KICAgICAgICAgICAgIm5hbWUiIDogIlN5cGhpbGlzIChUZXN0cyBmb3IgVHJlcG9uZW1hbCBvciBOb24gVHJlcG9uZW1hbCBBbnRpYm9keSkiLA0KICAgICAgICAgICAgImNvbnRleHQiIDogIlBhdGllbnQiLA0KICAgICAgICAgICAgImFjY2Vzc0xldmVsIiA6ICJQdWJsaWMiLA0KICAgICAgICAgICAgImFubm90YXRpb24iIDogWyB7DQogICAgICAgICAgICAgICAidHlwZSIgOiAiQW5ub3RhdGlvbiIsDQogICAgICAgICAgICAgICAidCIgOiBbIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkYXRhRWxlbWVudCIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkMyLkRFNyBTeXBoaWxpcyAoVGVzdHMgZm9yIFRyZXBvbmVtYWwgb3IgTm9uIFRyZXBvbmVtYWwgQW50aWJvZHkpIg0KICAgICAgICAgICAgICAgfSwgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImFjdGl2aXR5IiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiTkFDSEMuQzIgU3lwaGlsaXMgdGVzdCINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkZXNjcmlwdGlvbiIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIlN5cGhpbGlzIFRlc3QiDQogICAgICAgICAgICAgICB9IF0NCiAgICAgICAgICAgIH0gXSwNCiAgICAgICAgICAgICJleHByZXNzaW9uIiA6IHsNCiAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIxNDg6My0xNDg6ODAiLA0KICAgICAgICAgICAgICAgImRhdGFUeXBlIiA6ICJ7aHR0cDovL2hsNy5vcmcvZmhpcn1PYnNlcnZhdGlvbiIsDQogICAgICAgICAgICAgICAidGVtcGxhdGVJZCIgOiAiaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL09ic2VydmF0aW9uIiwNCiAgICAgICAgICAgICAgICJjb2RlUHJvcGVydHkiIDogImNvZGUiLA0KICAgICAgICAgICAgICAgImNvZGVDb21wYXJhdG9yIiA6ICJpbiIsDQogICAgICAgICAgICAgICAidHlwZSIgOiAiUmV0cmlldmUiLA0KICAgICAgICAgICAgICAgImNvZGVzIiA6IHsNCiAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIxNDg6MTctMTQ4Ojc5IiwNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJTeXBoaWxpcyAoVGVzdHMgZm9yIFRyZXBvbmVtYWwgb3IgTm9uIFRyZXBvbmVtYWwgQW50aWJvZHkpIiwNCiAgICAgICAgICAgICAgICAgICJsaWJyYXJ5TmFtZSIgOiAiQ3giLA0KICAgICAgICAgICAgICAgICAgInR5cGUiIDogIlZhbHVlU2V0UmVmIg0KICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgfSwgew0KICAgICAgICAgICAgImxvY2F0b3IiIDogIjE1NToxLTE1Njo2MyIsDQogICAgICAgICAgICAibmFtZSIgOiAiR29ub2NvY2NhbCBJbmZlY3Rpb25zIGFuZCBWZW5lcmVhbCBEaXNlYXNlcyIsDQogICAgICAgICAgICAiY29udGV4dCIgOiAiUGF0aWVudCIsDQogICAgICAgICAgICAiYWNjZXNzTGV2ZWwiIDogIlB1YmxpYyIsDQogICAgICAgICAgICAiYW5ub3RhdGlvbiIgOiBbIHsNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJBbm5vdGF0aW9uIiwNCiAgICAgICAgICAgICAgICJ0IiA6IFsgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRhdGFFbGVtZW50IiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiTkFDSEMuRDEuREUxIEdvbm9jb2NjYWwgSW5mZWN0aW9ucyBhbmQgVmVuZXJlYWwgRGlzZWFzZXMiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiYWN0aXZpdHkiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5EMSBHb25vcnJoZWEiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGVzY3JpcHRpb24iLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJHb25vcnJoZWEiDQogICAgICAgICAgICAgICB9IF0NCiAgICAgICAgICAgIH0gXSwNCiAgICAgICAgICAgICJleHByZXNzaW9uIiA6IHsNCiAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIxNTY6My0xNTY6NjMiLA0KICAgICAgICAgICAgICAgImRhdGFUeXBlIiA6ICJ7aHR0cDovL2hsNy5vcmcvZmhpcn1Db25kaXRpb24iLA0KICAgICAgICAgICAgICAgInRlbXBsYXRlSWQiIDogImh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9Db25kaXRpb24iLA0KICAgICAgICAgICAgICAgImNvZGVQcm9wZXJ0eSIgOiAiY29kZSIsDQogICAgICAgICAgICAgICAiY29kZUNvbXBhcmF0b3IiIDogImluIiwNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJSZXRyaWV2ZSIsDQogICAgICAgICAgICAgICAiY29kZXMiIDogew0KICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjE1NjoxNS0xNTY6NjIiLA0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogIkdvbm9jb2NjYWwgSW5mZWN0aW9ucyBhbmQgVmVuZXJlYWwgRGlzZWFzZXMiLA0KICAgICAgICAgICAgICAgICAgImxpYnJhcnlOYW1lIiA6ICJDeCIsDQogICAgICAgICAgICAgICAgICAidHlwZSIgOiAiVmFsdWVTZXRSZWYiDQogICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICB9LCB7DQogICAgICAgICAgICAibG9jYXRvciIgOiAiMTYzOjEtMTY0OjkyIiwNCiAgICAgICAgICAgICJuYW1lIiA6ICJHb25vcnJoZWEgW05laXNzZXJpYSBnb25vcnJob2VhZV0gKE9yZ2FuaXNtIG9yIFN1YnN0YW5jZSBpbiBMYWIgUmVzdWx0cykiLA0KICAgICAgICAgICAgImNvbnRleHQiIDogIlBhdGllbnQiLA0KICAgICAgICAgICAgImFjY2Vzc0xldmVsIiA6ICJQdWJsaWMiLA0KICAgICAgICAgICAgImFubm90YXRpb24iIDogWyB7DQogICAgICAgICAgICAgICAidHlwZSIgOiAiQW5ub3RhdGlvbiIsDQogICAgICAgICAgICAgICAidCIgOiBbIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkYXRhRWxlbWVudCIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkQxLkRFMTg0IEdvbm9ycmhlYSBbTmVpc3NlcmlhIGdvbm9ycmhvZWFlXSAoT3JnYW5pc20gb3IgU3Vic3RhbmNlIGluIExhYiBSZXN1bHRzKSINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJhY3Rpdml0eSIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkQxIEdvbm9ycmhlYSINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkZXNjcmlwdGlvbiIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIkdvbm9ycmhlYSINCiAgICAgICAgICAgICAgIH0gXQ0KICAgICAgICAgICAgfSBdLA0KICAgICAgICAgICAgImV4cHJlc3Npb24iIDogew0KICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjE2NDozLTE2NDo5MiIsDQogICAgICAgICAgICAgICAiZGF0YVR5cGUiIDogIntodHRwOi8vaGw3Lm9yZy9maGlyfUNvbmRpdGlvbiIsDQogICAgICAgICAgICAgICAidGVtcGxhdGVJZCIgOiAiaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL0NvbmRpdGlvbiIsDQogICAgICAgICAgICAgICAiY29kZVByb3BlcnR5IiA6ICJjb2RlIiwNCiAgICAgICAgICAgICAgICJjb2RlQ29tcGFyYXRvciIgOiAiaW4iLA0KICAgICAgICAgICAgICAgInR5cGUiIDogIlJldHJpZXZlIiwNCiAgICAgICAgICAgICAgICJjb2RlcyIgOiB7DQogICAgICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMTY0OjE1LTE2NDo5MSIsDQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiR29ub3JyaGVhIFtOZWlzc2VyaWEgZ29ub3JyaG9lYWVdIChPcmdhbmlzbSBvciBTdWJzdGFuY2UgaW4gTGFiIFJlc3VsdHMpIiwNCiAgICAgICAgICAgICAgICAgICJsaWJyYXJ5TmFtZSIgOiAiQ3giLA0KICAgICAgICAgICAgICAgICAgInR5cGUiIDogIlZhbHVlU2V0UmVmIg0KICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgfSwgew0KICAgICAgICAgICAgImxvY2F0b3IiIDogIjE3MToxLTE3MjoxMDAiLA0KICAgICAgICAgICAgIm5hbWUiIDogIkdvbm9ycmhlYSBbTmVpc3NlcmlhIHNwZWNpZXMgVW5zcGVjaWZpZWRdIChPcmdhbmlzbSBvciBTdWJzdGFuY2UgaW4gTGFiIFJlc3VsdHMpIiwNCiAgICAgICAgICAgICJjb250ZXh0IiA6ICJQYXRpZW50IiwNCiAgICAgICAgICAgICJhY2Nlc3NMZXZlbCIgOiAiUHVibGljIiwNCiAgICAgICAgICAgICJhbm5vdGF0aW9uIiA6IFsgew0KICAgICAgICAgICAgICAgInR5cGUiIDogIkFubm90YXRpb24iLA0KICAgICAgICAgICAgICAgInQiIDogWyB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGF0YUVsZW1lbnQiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5EMS5ERTE5NiBHb25vcnJoZWEgW05laXNzZXJpYSBzcGVjaWVzIFVuc3BlY2lmaWVkXSAoT3JnYW5pc20gb3IgU3Vic3RhbmNlIGluIExhYiBSZXN1bHRzKSINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJhY3Rpdml0eSIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkQxIEdvbm9ycmhlYSINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkZXNjcmlwdGlvbiIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIkdvbm9ycmhlYSINCiAgICAgICAgICAgICAgIH0gXQ0KICAgICAgICAgICAgfSBdLA0KICAgICAgICAgICAgImV4cHJlc3Npb24iIDogew0KICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjE3MjozLTE3MjoxMDAiLA0KICAgICAgICAgICAgICAgImRhdGFUeXBlIiA6ICJ7aHR0cDovL2hsNy5vcmcvZmhpcn1Db25kaXRpb24iLA0KICAgICAgICAgICAgICAgInRlbXBsYXRlSWQiIDogImh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9Db25kaXRpb24iLA0KICAgICAgICAgICAgICAgImNvZGVQcm9wZXJ0eSIgOiAiY29kZSIsDQogICAgICAgICAgICAgICAiY29kZUNvbXBhcmF0b3IiIDogImluIiwNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJSZXRyaWV2ZSIsDQogICAgICAgICAgICAgICAiY29kZXMiIDogew0KICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjE3MjoxNS0xNzI6OTkiLA0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogIkdvbm9ycmhlYSBbTmVpc3NlcmlhIHNwZWNpZXMgVW5zcGVjaWZpZWRdIChPcmdhbmlzbSBvciBTdWJzdGFuY2UgaW4gTGFiIFJlc3VsdHMpIiwNCiAgICAgICAgICAgICAgICAgICJsaWJyYXJ5TmFtZSIgOiAiQ3giLA0KICAgICAgICAgICAgICAgICAgInR5cGUiIDogIlZhbHVlU2V0UmVmIg0KICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgfSwgew0KICAgICAgICAgICAgImxvY2F0b3IiIDogIjE3OToxLTE4MDo4MSIsDQogICAgICAgICAgICAibmFtZSIgOiAiR29ub3JyaGVhIFtTZWNvbmRhcnkgU2l0ZXMgQ29tcGxpY2F0aW9ucyBDaHJvbmljXSAoRGlzb3JkZXJzKSIsDQogICAgICAgICAgICAiY29udGV4dCIgOiAiUGF0aWVudCIsDQogICAgICAgICAgICAiYWNjZXNzTGV2ZWwiIDogIlB1YmxpYyIsDQogICAgICAgICAgICAiYW5ub3RhdGlvbiIgOiBbIHsNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJBbm5vdGF0aW9uIiwNCiAgICAgICAgICAgICAgICJ0IiA6IFsgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRhdGFFbGVtZW50IiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiTkFDSEMuRDEuREUyMDEgR29ub3JyaGVhIFtTZWNvbmRhcnkgU2l0ZXMgQ29tcGxpY2F0aW9ucyBDaHJvbmljXSAoRGlzb3JkZXJzKSINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJhY3Rpdml0eSIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkQxIEdvbm9ycmhlYSINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkZXNjcmlwdGlvbiIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIkdvbm9ycmhlYSINCiAgICAgICAgICAgICAgIH0gXQ0KICAgICAgICAgICAgfSBdLA0KICAgICAgICAgICAgImV4cHJlc3Npb24iIDogew0KICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjE4MDozLTE4MDo4MSIsDQogICAgICAgICAgICAgICAiZGF0YVR5cGUiIDogIntodHRwOi8vaGw3Lm9yZy9maGlyfUNvbmRpdGlvbiIsDQogICAgICAgICAgICAgICAidGVtcGxhdGVJZCIgOiAiaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL0NvbmRpdGlvbiIsDQogICAgICAgICAgICAgICAiY29kZVByb3BlcnR5IiA6ICJjb2RlIiwNCiAgICAgICAgICAgICAgICJjb2RlQ29tcGFyYXRvciIgOiAiaW4iLA0KICAgICAgICAgICAgICAgInR5cGUiIDogIlJldHJpZXZlIiwNCiAgICAgICAgICAgICAgICJjb2RlcyIgOiB7DQogICAgICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMTgwOjE1LTE4MDo4MCIsDQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiR29ub3JyaGVhIFtTZWNvbmRhcnkgU2l0ZXMgQ29tcGxpY2F0aW9ucyBDaHJvbmljXSAoRGlzb3JkZXJzKSIsDQogICAgICAgICAgICAgICAgICAibGlicmFyeU5hbWUiIDogIkN4IiwNCiAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJWYWx1ZVNldFJlZiINCiAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICJsb2NhdG9yIiA6ICIxODc6MS0xODg6NzIiLA0KICAgICAgICAgICAgIm5hbWUiIDogIkdvbm9ycmhlYSBUZXN0cyBmb3IgTmVpc3NlcmlhIGdvbm9ycmhlYSBieSBDdWx0dXJlIiwNCiAgICAgICAgICAgICJjb250ZXh0IiA6ICJQYXRpZW50IiwNCiAgICAgICAgICAgICJhY2Nlc3NMZXZlbCIgOiAiUHVibGljIiwNCiAgICAgICAgICAgICJhbm5vdGF0aW9uIiA6IFsgew0KICAgICAgICAgICAgICAgInR5cGUiIDogIkFubm90YXRpb24iLA0KICAgICAgICAgICAgICAgInQiIDogWyB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGF0YUVsZW1lbnQiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5EMi5ERTEgR29ub3JyaGVhIFRlc3RzIGZvciBOZWlzc2VyaWEgZ29ub3JyaGVhIGJ5IEN1bHR1cmUiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiYWN0aXZpdHkiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5EMiBHb25vcnJoZWEgdGVzdCINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkZXNjcmlwdGlvbiIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIkdvbm9ycmhlYSBUZXN0Ig0KICAgICAgICAgICAgICAgfSBdDQogICAgICAgICAgICB9IF0sDQogICAgICAgICAgICAiZXhwcmVzc2lvbiIgOiB7DQogICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMTg4OjMtMTg4OjcyIiwNCiAgICAgICAgICAgICAgICJkYXRhVHlwZSIgOiAie2h0dHA6Ly9obDcub3JnL2ZoaXJ9T2JzZXJ2YXRpb24iLA0KICAgICAgICAgICAgICAgInRlbXBsYXRlSWQiIDogImh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9PYnNlcnZhdGlvbiIsDQogICAgICAgICAgICAgICAiY29kZVByb3BlcnR5IiA6ICJjb2RlIiwNCiAgICAgICAgICAgICAgICJjb2RlQ29tcGFyYXRvciIgOiAiaW4iLA0KICAgICAgICAgICAgICAgInR5cGUiIDogIlJldHJpZXZlIiwNCiAgICAgICAgICAgICAgICJjb2RlcyIgOiB7DQogICAgICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMTg4OjE3LTE4ODo3MSIsDQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiR29ub3JyaGVhIFRlc3RzIGZvciBOZWlzc2VyaWEgZ29ub3JyaGVhIGJ5IEN1bHR1cmUiLA0KICAgICAgICAgICAgICAgICAgImxpYnJhcnlOYW1lIiA6ICJDeCIsDQogICAgICAgICAgICAgICAgICAidHlwZSIgOiAiVmFsdWVTZXRSZWYiDQogICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICB9LCB7DQogICAgICAgICAgICAibG9jYXRvciIgOiAiMTk1OjEtMTk2Ojc2IiwNCiAgICAgICAgICAgICJuYW1lIiA6ICJHb25vcnJoZWEgVGVzdHMgYW5kIENobGFteWRpYS9Hb25vcnJoZWEgQ29tYmluZWQgVGVzdHMiLA0KICAgICAgICAgICAgImNvbnRleHQiIDogIlBhdGllbnQiLA0KICAgICAgICAgICAgImFjY2Vzc0xldmVsIiA6ICJQdWJsaWMiLA0KICAgICAgICAgICAgImFubm90YXRpb24iIDogWyB7DQogICAgICAgICAgICAgICAidHlwZSIgOiAiQW5ub3RhdGlvbiIsDQogICAgICAgICAgICAgICAidCIgOiBbIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkYXRhRWxlbWVudCIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkQyLkRFMTAwIEdvbm9ycmhlYSBUZXN0cyBhbmQgQ2hsYW15ZGlhL0dvbm9ycmhlYSBDb21iaW5lZCBUZXN0cyINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJhY3Rpdml0eSIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkQyIEdvbm9ycmhlYSB0ZXN0Ig0KICAgICAgICAgICAgICAgfSwgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRlc2NyaXB0aW9uIiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiR29ub3JyaGVhIFRlc3QiDQogICAgICAgICAgICAgICB9IF0NCiAgICAgICAgICAgIH0gXSwNCiAgICAgICAgICAgICJleHByZXNzaW9uIiA6IHsNCiAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIxOTY6My0xOTY6NzYiLA0KICAgICAgICAgICAgICAgImRhdGFUeXBlIiA6ICJ7aHR0cDovL2hsNy5vcmcvZmhpcn1PYnNlcnZhdGlvbiIsDQogICAgICAgICAgICAgICAidGVtcGxhdGVJZCIgOiAiaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL09ic2VydmF0aW9uIiwNCiAgICAgICAgICAgICAgICJjb2RlUHJvcGVydHkiIDogImNvZGUiLA0KICAgICAgICAgICAgICAgImNvZGVDb21wYXJhdG9yIiA6ICJpbiIsDQogICAgICAgICAgICAgICAidHlwZSIgOiAiUmV0cmlldmUiLA0KICAgICAgICAgICAgICAgImNvZGVzIiA6IHsNCiAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIxOTY6MTctMTk2Ojc1IiwNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJHb25vcnJoZWEgVGVzdHMgYW5kIENobGFteWRpYS9Hb25vcnJoZWEgQ29tYmluZWQgVGVzdHMiLA0KICAgICAgICAgICAgICAgICAgImxpYnJhcnlOYW1lIiA6ICJDeCIsDQogICAgICAgICAgICAgICAgICAidHlwZSIgOiAiVmFsdWVTZXRSZWYiDQogICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICB9LCB7DQogICAgICAgICAgICAibG9jYXRvciIgOiAiMjAzOjEtMjA0Ojc4IiwNCiAgICAgICAgICAgICJuYW1lIiA6ICJHb25vcnJoZWEgKFRlc3RzIGZvciBOZWlzc2VyaWEgZ29ub3JyaG9lYWUgTnVjbGVpYyBBY2lkKSIsDQogICAgICAgICAgICAiY29udGV4dCIgOiAiUGF0aWVudCIsDQogICAgICAgICAgICAiYWNjZXNzTGV2ZWwiIDogIlB1YmxpYyIsDQogICAgICAgICAgICAiYW5ub3RhdGlvbiIgOiBbIHsNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJBbm5vdGF0aW9uIiwNCiAgICAgICAgICAgICAgICJ0IiA6IFsgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRhdGFFbGVtZW50IiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiTkFDSEMuRDIuREUxNiBHb25vcnJoZWEgKFRlc3RzIGZvciBOZWlzc2VyaWEgZ29ub3JyaG9lYWUgTnVjbGVpYyBBY2lkKSINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJhY3Rpdml0eSIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkQyIEdvbm9ycmhlYSB0ZXN0Ig0KICAgICAgICAgICAgICAgfSwgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRlc2NyaXB0aW9uIiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiR29ub3JyaGVhIFRlc3QiDQogICAgICAgICAgICAgICB9IF0NCiAgICAgICAgICAgIH0gXSwNCiAgICAgICAgICAgICJleHByZXNzaW9uIiA6IHsNCiAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIyMDQ6My0yMDQ6NzgiLA0KICAgICAgICAgICAgICAgImRhdGFUeXBlIiA6ICJ7aHR0cDovL2hsNy5vcmcvZmhpcn1PYnNlcnZhdGlvbiIsDQogICAgICAgICAgICAgICAidGVtcGxhdGVJZCIgOiAiaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL09ic2VydmF0aW9uIiwNCiAgICAgICAgICAgICAgICJjb2RlUHJvcGVydHkiIDogImNvZGUiLA0KICAgICAgICAgICAgICAgImNvZGVDb21wYXJhdG9yIiA6ICJpbiIsDQogICAgICAgICAgICAgICAidHlwZSIgOiAiUmV0cmlldmUiLA0KICAgICAgICAgICAgICAgImNvZGVzIiA6IHsNCiAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIyMDQ6MTctMjA0Ojc3IiwNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJHb25vcnJoZWEgKFRlc3RzIGZvciBOZWlzc2VyaWEgZ29ub3JyaG9lYWUgTnVjbGVpYyBBY2lkKSIsDQogICAgICAgICAgICAgICAgICAibGlicmFyeU5hbWUiIDogIkN4IiwNCiAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJWYWx1ZVNldFJlZiINCiAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICJsb2NhdG9yIiA6ICIyMTE6MS0yMTI6OTgiLA0KICAgICAgICAgICAgIm5hbWUiIDogIkdvbm9ycmhlYSAoVGVzdHMgZm9yIE5laXNzZXJpYSBzcGVjaWVzIGJ5IEN1bHR1cmUgYW5kIElkZW50aWZpY2F0aW9uIE1ldGhvZCkiLA0KICAgICAgICAgICAgImNvbnRleHQiIDogIlBhdGllbnQiLA0KICAgICAgICAgICAgImFjY2Vzc0xldmVsIiA6ICJQdWJsaWMiLA0KICAgICAgICAgICAgImFubm90YXRpb24iIDogWyB7DQogICAgICAgICAgICAgICAidHlwZSIgOiAiQW5ub3RhdGlvbiIsDQogICAgICAgICAgICAgICAidCIgOiBbIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkYXRhRWxlbWVudCIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkQyLkRFNTkgR29ub3JyaGVhIChUZXN0cyBmb3IgTmVpc3NlcmlhIHNwZWNpZXMgYnkgQ3VsdHVyZSBhbmQgSWRlbnRpZmljYXRpb24gTWV0aG9kKSINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJhY3Rpdml0eSIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkQyIEdvbm9ycmhlYSB0ZXN0Ig0KICAgICAgICAgICAgICAgfSwgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRlc2NyaXB0aW9uIiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiR29ub3JyaGVhIFRlc3QiDQogICAgICAgICAgICAgICB9IF0NCiAgICAgICAgICAgIH0gXSwNCiAgICAgICAgICAgICJleHByZXNzaW9uIiA6IHsNCiAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIyMTI6My0yMTI6OTgiLA0KICAgICAgICAgICAgICAgImRhdGFUeXBlIiA6ICJ7aHR0cDovL2hsNy5vcmcvZmhpcn1PYnNlcnZhdGlvbiIsDQogICAgICAgICAgICAgICAidGVtcGxhdGVJZCIgOiAiaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL09ic2VydmF0aW9uIiwNCiAgICAgICAgICAgICAgICJjb2RlUHJvcGVydHkiIDogImNvZGUiLA0KICAgICAgICAgICAgICAgImNvZGVDb21wYXJhdG9yIiA6ICJpbiIsDQogICAgICAgICAgICAgICAidHlwZSIgOiAiUmV0cmlldmUiLA0KICAgICAgICAgICAgICAgImNvZGVzIiA6IHsNCiAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIyMTI6MTctMjEyOjk3IiwNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJHb25vcnJoZWEgKFRlc3RzIGZvciBOZWlzc2VyaWEgc3BlY2llcyBieSBDdWx0dXJlIGFuZCBJZGVudGlmaWNhdGlvbiBNZXRob2QpIiwNCiAgICAgICAgICAgICAgICAgICJsaWJyYXJ5TmFtZSIgOiAiQ3giLA0KICAgICAgICAgICAgICAgICAgInR5cGUiIDogIlZhbHVlU2V0UmVmIg0KICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgfSwgew0KICAgICAgICAgICAgImxvY2F0b3IiIDogIjIxOToxLTIyMDozNiIsDQogICAgICAgICAgICAibmFtZSIgOiAiR29ub3JyaGVhIHRlc3QiLA0KICAgICAgICAgICAgImNvbnRleHQiIDogIlBhdGllbnQiLA0KICAgICAgICAgICAgImFjY2Vzc0xldmVsIiA6ICJQdWJsaWMiLA0KICAgICAgICAgICAgImFubm90YXRpb24iIDogWyB7DQogICAgICAgICAgICAgICAidHlwZSIgOiAiQW5ub3RhdGlvbiIsDQogICAgICAgICAgICAgICAidCIgOiBbIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkYXRhRWxlbWVudCIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkQyLkRFNjYgR29ub3JyaGVhIHRlc3QiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiYWN0aXZpdHkiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5EMiBHb25vcnJoZWEgdGVzdCINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkZXNjcmlwdGlvbiIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIkdvbm9ycmhlYSBUZXN0Ig0KICAgICAgICAgICAgICAgfSBdDQogICAgICAgICAgICB9IF0sDQogICAgICAgICAgICAiZXhwcmVzc2lvbiIgOiB7DQogICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMjIwOjMtMjIwOjM2IiwNCiAgICAgICAgICAgICAgICJkYXRhVHlwZSIgOiAie2h0dHA6Ly9obDcub3JnL2ZoaXJ9T2JzZXJ2YXRpb24iLA0KICAgICAgICAgICAgICAgInRlbXBsYXRlSWQiIDogImh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9PYnNlcnZhdGlvbiIsDQogICAgICAgICAgICAgICAiY29kZVByb3BlcnR5IiA6ICJjb2RlIiwNCiAgICAgICAgICAgICAgICJjb2RlQ29tcGFyYXRvciIgOiAiaW4iLA0KICAgICAgICAgICAgICAgInR5cGUiIDogIlJldHJpZXZlIiwNCiAgICAgICAgICAgICAgICJjb2RlcyIgOiB7DQogICAgICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMjIwOjE3LTIyMDozNSIsDQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiR29ub3JyaGVhIHRlc3QiLA0KICAgICAgICAgICAgICAgICAgImxpYnJhcnlOYW1lIiA6ICJDeCIsDQogICAgICAgICAgICAgICAgICAidHlwZSIgOiAiVmFsdWVTZXRSZWYiDQogICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICB9LCB7DQogICAgICAgICAgICAibG9jYXRvciIgOiAiMjI3OjEtMjI4OjI5IiwNCiAgICAgICAgICAgICJuYW1lIiA6ICJDaGxhbXlkaWEiLA0KICAgICAgICAgICAgImNvbnRleHQiIDogIlBhdGllbnQiLA0KICAgICAgICAgICAgImFjY2Vzc0xldmVsIiA6ICJQdWJsaWMiLA0KICAgICAgICAgICAgImFubm90YXRpb24iIDogWyB7DQogICAgICAgICAgICAgICAidHlwZSIgOiAiQW5ub3RhdGlvbiIsDQogICAgICAgICAgICAgICAidCIgOiBbIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkYXRhRWxlbWVudCIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkUxLkRFMSBDaGxhbXlkaWEiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiYWN0aXZpdHkiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5FMSBDaGxhbXlkaWEiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGVzY3JpcHRpb24iLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJDaGxhbXlkaWEiDQogICAgICAgICAgICAgICB9IF0NCiAgICAgICAgICAgIH0gXSwNCiAgICAgICAgICAgICJleHByZXNzaW9uIiA6IHsNCiAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIyMjg6My0yMjg6MjkiLA0KICAgICAgICAgICAgICAgImRhdGFUeXBlIiA6ICJ7aHR0cDovL2hsNy5vcmcvZmhpcn1Db25kaXRpb24iLA0KICAgICAgICAgICAgICAgInRlbXBsYXRlSWQiIDogImh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9Db25kaXRpb24iLA0KICAgICAgICAgICAgICAgImNvZGVQcm9wZXJ0eSIgOiAiY29kZSIsDQogICAgICAgICAgICAgICAiY29kZUNvbXBhcmF0b3IiIDogImluIiwNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJSZXRyaWV2ZSIsDQogICAgICAgICAgICAgICAiY29kZXMiIDogew0KICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjIyODoxNS0yMjg6MjgiLA0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogIkNobGFteWRpYSIsDQogICAgICAgICAgICAgICAgICAibGlicmFyeU5hbWUiIDogIkN4IiwNCiAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJWYWx1ZVNldFJlZiINCiAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICJsb2NhdG9yIiA6ICIyMzU6MS0yMzY6NjIiLA0KICAgICAgICAgICAgIm5hbWUiIDogIkNobGFteWRpYSBJbmZlY3Rpb25zIGFuZCBWZW5lcmVhbCBEaXNlYXNlcyIsDQogICAgICAgICAgICAiY29udGV4dCIgOiAiUGF0aWVudCIsDQogICAgICAgICAgICAiYWNjZXNzTGV2ZWwiIDogIlB1YmxpYyIsDQogICAgICAgICAgICAiYW5ub3RhdGlvbiIgOiBbIHsNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJBbm5vdGF0aW9uIiwNCiAgICAgICAgICAgICAgICJ0IiA6IFsgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRhdGFFbGVtZW50IiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiTkFDSEMuRTEuREUyNiBDaGxhbXlkaWEgSW5mZWN0aW9ucyBhbmQgVmVuZXJlYWwgRGlzZWFzZXMiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiYWN0aXZpdHkiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5FMSBDaGxhbXlkaWEiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGVzY3JpcHRpb24iLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJDaGxhbXlkaWEiDQogICAgICAgICAgICAgICB9IF0NCiAgICAgICAgICAgIH0gXSwNCiAgICAgICAgICAgICJleHByZXNzaW9uIiA6IHsNCiAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIyMzY6My0yMzY6NjIiLA0KICAgICAgICAgICAgICAgImRhdGFUeXBlIiA6ICJ7aHR0cDovL2hsNy5vcmcvZmhpcn1Db25kaXRpb24iLA0KICAgICAgICAgICAgICAgInRlbXBsYXRlSWQiIDogImh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9Db25kaXRpb24iLA0KICAgICAgICAgICAgICAgImNvZGVQcm9wZXJ0eSIgOiAiY29kZSIsDQogICAgICAgICAgICAgICAiY29kZUNvbXBhcmF0b3IiIDogImluIiwNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJSZXRyaWV2ZSIsDQogICAgICAgICAgICAgICAiY29kZXMiIDogew0KICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjIzNjoxNS0yMzY6NjEiLA0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogIkNobGFteWRpYSBJbmZlY3Rpb25zIGFuZCBWZW5lcmVhbCBEaXNlYXNlcyIsDQogICAgICAgICAgICAgICAgICAibGlicmFyeU5hbWUiIDogIkN4IiwNCiAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJWYWx1ZVNldFJlZiINCiAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICJsb2NhdG9yIiA6ICIyNDM6MS0yNDQ6OTUiLA0KICAgICAgICAgICAgIm5hbWUiIDogIkNobGFteWRpYSB0cmFjaG9tYXRpcyBJbmZlY3Rpb24gW1NlY29uZGFyeSBTaXRlcyBDb21wbGljYXRpb25zXSAoRGlzb3JkZXJzKSIsDQogICAgICAgICAgICAiY29udGV4dCIgOiAiUGF0aWVudCIsDQogICAgICAgICAgICAiYWNjZXNzTGV2ZWwiIDogIlB1YmxpYyIsDQogICAgICAgICAgICAiYW5ub3RhdGlvbiIgOiBbIHsNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJBbm5vdGF0aW9uIiwNCiAgICAgICAgICAgICAgICJ0IiA6IFsgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRhdGFFbGVtZW50IiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiTkFDSEMuRTEuREUzMSBDaGxhbXlkaWEgdHJhY2hvbWF0aXMgSW5mZWN0aW9uIFtTZWNvbmRhcnkgU2l0ZXMgQ29tcGxpY2F0aW9uc10gKERpc29yZGVycykiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiYWN0aXZpdHkiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5FMSBDaGxhbXlkaWEiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGVzY3JpcHRpb24iLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJDaGxhbXlkaWEiDQogICAgICAgICAgICAgICB9IF0NCiAgICAgICAgICAgIH0gXSwNCiAgICAgICAgICAgICJleHByZXNzaW9uIiA6IHsNCiAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIyNDQ6My0yNDQ6OTUiLA0KICAgICAgICAgICAgICAgImRhdGFUeXBlIiA6ICJ7aHR0cDovL2hsNy5vcmcvZmhpcn1Db25kaXRpb24iLA0KICAgICAgICAgICAgICAgInRlbXBsYXRlSWQiIDogImh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9Db25kaXRpb24iLA0KICAgICAgICAgICAgICAgImNvZGVQcm9wZXJ0eSIgOiAiY29kZSIsDQogICAgICAgICAgICAgICAiY29kZUNvbXBhcmF0b3IiIDogImluIiwNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJSZXRyaWV2ZSIsDQogICAgICAgICAgICAgICAiY29kZXMiIDogew0KICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjI0NDoxNS0yNDQ6OTQiLA0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogIkNobGFteWRpYSB0cmFjaG9tYXRpcyBJbmZlY3Rpb24gW1NlY29uZGFyeSBTaXRlcyBDb21wbGljYXRpb25zXSAoRGlzb3JkZXJzKSIsDQogICAgICAgICAgICAgICAgICAibGlicmFyeU5hbWUiIDogIkN4IiwNCiAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJWYWx1ZVNldFJlZiINCiAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICJsb2NhdG9yIiA6ICIyNTE6MS0yNTI6ODUiLA0KICAgICAgICAgICAgIm5hbWUiIDogIkNobGFteWRpYSB0cmFjaG9tYXRpcyBvcmdhbmlzbSBvciBDaGxhbXlkaWEgdHJhY2hvbWF0aXMgc3Vic3RhbmNlIiwNCiAgICAgICAgICAgICJjb250ZXh0IiA6ICJQYXRpZW50IiwNCiAgICAgICAgICAgICJhY2Nlc3NMZXZlbCIgOiAiUHVibGljIiwNCiAgICAgICAgICAgICJhbm5vdGF0aW9uIiA6IFsgew0KICAgICAgICAgICAgICAgInR5cGUiIDogIkFubm90YXRpb24iLA0KICAgICAgICAgICAgICAgInQiIDogWyB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGF0YUVsZW1lbnQiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5FMS5ERTYyIENobGFteWRpYSB0cmFjaG9tYXRpcyBvcmdhbmlzbSBvciBDaGxhbXlkaWEgdHJhY2hvbWF0aXMgc3Vic3RhbmNlIg0KICAgICAgICAgICAgICAgfSwgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImFjdGl2aXR5IiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiTkFDSEMuRTEgQ2hsYW15ZGlhIg0KICAgICAgICAgICAgICAgfSwgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRlc2NyaXB0aW9uIiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiQ2hsYW15ZGlhIg0KICAgICAgICAgICAgICAgfSBdDQogICAgICAgICAgICB9IF0sDQogICAgICAgICAgICAiZXhwcmVzc2lvbiIgOiB7DQogICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMjUyOjMtMjUyOjg1IiwNCiAgICAgICAgICAgICAgICJkYXRhVHlwZSIgOiAie2h0dHA6Ly9obDcub3JnL2ZoaXJ9Q29uZGl0aW9uIiwNCiAgICAgICAgICAgICAgICJ0ZW1wbGF0ZUlkIiA6ICJodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vQ29uZGl0aW9uIiwNCiAgICAgICAgICAgICAgICJjb2RlUHJvcGVydHkiIDogImNvZGUiLA0KICAgICAgICAgICAgICAgImNvZGVDb21wYXJhdG9yIiA6ICJpbiIsDQogICAgICAgICAgICAgICAidHlwZSIgOiAiUmV0cmlldmUiLA0KICAgICAgICAgICAgICAgImNvZGVzIiA6IHsNCiAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIyNTI6MTUtMjUyOjg0IiwNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJDaGxhbXlkaWEgdHJhY2hvbWF0aXMgb3JnYW5pc20gb3IgQ2hsYW15ZGlhIHRyYWNob21hdGlzIHN1YnN0YW5jZSIsDQogICAgICAgICAgICAgICAgICAibGlicmFyeU5hbWUiIDogIkN4IiwNCiAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJWYWx1ZVNldFJlZiINCiAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICJsb2NhdG9yIiA6ICIyNTk6MS0yNjA6NDEiLA0KICAgICAgICAgICAgIm5hbWUiIDogIkNobGFteWRpYSBTY3JlZW5pbmciLA0KICAgICAgICAgICAgImNvbnRleHQiIDogIlBhdGllbnQiLA0KICAgICAgICAgICAgImFjY2Vzc0xldmVsIiA6ICJQdWJsaWMiLA0KICAgICAgICAgICAgImFubm90YXRpb24iIDogWyB7DQogICAgICAgICAgICAgICAidHlwZSIgOiAiQW5ub3RhdGlvbiIsDQogICAgICAgICAgICAgICAidCIgOiBbIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkYXRhRWxlbWVudCIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkUyLkRFMSBDaGxhbXlkaWEgU2NyZWVuaW5nIg0KICAgICAgICAgICAgICAgfSwgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImFjdGl2aXR5IiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiTkFDSEMuRTIgQ2hsYW15ZGlhIHRlc3QiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGVzY3JpcHRpb24iLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJDaGxhbXlkaWEgVGVzdCINCiAgICAgICAgICAgICAgIH0gXQ0KICAgICAgICAgICAgfSBdLA0KICAgICAgICAgICAgImV4cHJlc3Npb24iIDogew0KICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjI2MDozLTI2MDo0MSIsDQogICAgICAgICAgICAgICAiZGF0YVR5cGUiIDogIntodHRwOi8vaGw3Lm9yZy9maGlyfU9ic2VydmF0aW9uIiwNCiAgICAgICAgICAgICAgICJ0ZW1wbGF0ZUlkIiA6ICJodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vT2JzZXJ2YXRpb24iLA0KICAgICAgICAgICAgICAgImNvZGVQcm9wZXJ0eSIgOiAiY29kZSIsDQogICAgICAgICAgICAgICAiY29kZUNvbXBhcmF0b3IiIDogImluIiwNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJSZXRyaWV2ZSIsDQogICAgICAgICAgICAgICAiY29kZXMiIDogew0KICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjI2MDoxNy0yNjA6NDAiLA0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogIkNobGFteWRpYSBTY3JlZW5pbmciLA0KICAgICAgICAgICAgICAgICAgImxpYnJhcnlOYW1lIiA6ICJDeCIsDQogICAgICAgICAgICAgICAgICAidHlwZSIgOiAiVmFsdWVTZXRSZWYiDQogICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICB9LCB7DQogICAgICAgICAgICAibG9jYXRvciIgOiAiMjY3OjEtMjY4OjU1IiwNCiAgICAgICAgICAgICJuYW1lIiA6ICJDaGxhbXlkaWEgVHJhY2hvbWF0aXMgVGVzdHMsIEZQQVIiLA0KICAgICAgICAgICAgImNvbnRleHQiIDogIlBhdGllbnQiLA0KICAgICAgICAgICAgImFjY2Vzc0xldmVsIiA6ICJQdWJsaWMiLA0KICAgICAgICAgICAgImFubm90YXRpb24iIDogWyB7DQogICAgICAgICAgICAgICAidHlwZSIgOiAiQW5ub3RhdGlvbiIsDQogICAgICAgICAgICAgICAidCIgOiBbIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkYXRhRWxlbWVudCIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkUyLkRFMTIyIENobGFteWRpYSBUcmFjaG9tYXRpcyBUZXN0cywgRlBBUiINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJhY3Rpdml0eSIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkUyIENobGFteWRpYSB0ZXN0Ig0KICAgICAgICAgICAgICAgfSwgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRlc2NyaXB0aW9uIiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiQ2hsYW15ZGlhIFRlc3QiDQogICAgICAgICAgICAgICB9IF0NCiAgICAgICAgICAgIH0gXSwNCiAgICAgICAgICAgICJleHByZXNzaW9uIiA6IHsNCiAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIyNjg6My0yNjg6NTUiLA0KICAgICAgICAgICAgICAgImRhdGFUeXBlIiA6ICJ7aHR0cDovL2hsNy5vcmcvZmhpcn1PYnNlcnZhdGlvbiIsDQogICAgICAgICAgICAgICAidGVtcGxhdGVJZCIgOiAiaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL09ic2VydmF0aW9uIiwNCiAgICAgICAgICAgICAgICJjb2RlUHJvcGVydHkiIDogImNvZGUiLA0KICAgICAgICAgICAgICAgImNvZGVDb21wYXJhdG9yIiA6ICJpbiIsDQogICAgICAgICAgICAgICAidHlwZSIgOiAiUmV0cmlldmUiLA0KICAgICAgICAgICAgICAgImNvZGVzIiA6IHsNCiAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIyNjg6MTctMjY4OjU0IiwNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJDaGxhbXlkaWEgVHJhY2hvbWF0aXMgVGVzdHMsIEZQQVIiLA0KICAgICAgICAgICAgICAgICAgImxpYnJhcnlOYW1lIiA6ICJDeCIsDQogICAgICAgICAgICAgICAgICAidHlwZSIgOiAiVmFsdWVTZXRSZWYiDQogICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICB9LCB7DQogICAgICAgICAgICAibG9jYXRvciIgOiAiMjc1OjEtMjc2OjYxIiwNCiAgICAgICAgICAgICJuYW1lIiA6ICJUZXN0cyBmb3IgQ2hsYW15ZGlhIHRyYWNob21hdGlzIEFudGlnZW4iLA0KICAgICAgICAgICAgImNvbnRleHQiIDogIlBhdGllbnQiLA0KICAgICAgICAgICAgImFjY2Vzc0xldmVsIiA6ICJQdWJsaWMiLA0KICAgICAgICAgICAgImFubm90YXRpb24iIDogWyB7DQogICAgICAgICAgICAgICAidHlwZSIgOiAiQW5ub3RhdGlvbiIsDQogICAgICAgICAgICAgICAidCIgOiBbIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkYXRhRWxlbWVudCIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkUyLkRFMTI0IFRlc3RzIGZvciBDaGxhbXlkaWEgdHJhY2hvbWF0aXMgQW50aWdlbiINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJhY3Rpdml0eSIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkUyIENobGFteWRpYSB0ZXN0Ig0KICAgICAgICAgICAgICAgfSwgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRlc2NyaXB0aW9uIiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiQ2hsYW15ZGlhIFRlc3QiDQogICAgICAgICAgICAgICB9IF0NCiAgICAgICAgICAgIH0gXSwNCiAgICAgICAgICAgICJleHByZXNzaW9uIiA6IHsNCiAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIyNzY6My0yNzY6NjEiLA0KICAgICAgICAgICAgICAgImRhdGFUeXBlIiA6ICJ7aHR0cDovL2hsNy5vcmcvZmhpcn1PYnNlcnZhdGlvbiIsDQogICAgICAgICAgICAgICAidGVtcGxhdGVJZCIgOiAiaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL09ic2VydmF0aW9uIiwNCiAgICAgICAgICAgICAgICJjb2RlUHJvcGVydHkiIDogImNvZGUiLA0KICAgICAgICAgICAgICAgImNvZGVDb21wYXJhdG9yIiA6ICJpbiIsDQogICAgICAgICAgICAgICAidHlwZSIgOiAiUmV0cmlldmUiLA0KICAgICAgICAgICAgICAgImNvZGVzIiA6IHsNCiAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIyNzY6MTctMjc2OjYwIiwNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJUZXN0cyBmb3IgQ2hsYW15ZGlhIHRyYWNob21hdGlzIEFudGlnZW4iLA0KICAgICAgICAgICAgICAgICAgImxpYnJhcnlOYW1lIiA6ICJDeCIsDQogICAgICAgICAgICAgICAgICAidHlwZSIgOiAiVmFsdWVTZXRSZWYiDQogICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICB9LCB7DQogICAgICAgICAgICAibG9jYXRvciIgOiAiMjgzOjEtMjg0OjkxIiwNCiAgICAgICAgICAgICJuYW1lIiA6ICJUZXN0cyBmb3IgQ2hsYW15ZGlhIHRyYWNob21hdGlzIGJ5IEN1bHR1cmUgYW5kIElkZW50aWZpY2F0aW9uIE1ldGhvZCkiLA0KICAgICAgICAgICAgImNvbnRleHQiIDogIlBhdGllbnQiLA0KICAgICAgICAgICAgImFjY2Vzc0xldmVsIiA6ICJQdWJsaWMiLA0KICAgICAgICAgICAgImFubm90YXRpb24iIDogWyB7DQogICAgICAgICAgICAgICAidHlwZSIgOiAiQW5ub3RhdGlvbiIsDQogICAgICAgICAgICAgICAidCIgOiBbIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkYXRhRWxlbWVudCIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkUyLkRFMTUzIFRlc3RzIGZvciBDaGxhbXlkaWEgdHJhY2hvbWF0aXMgYnkgQ3VsdHVyZSBhbmQgSWRlbnRpZmljYXRpb24gTWV0aG9kKSINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJhY3Rpdml0eSIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkUyIENobGFteWRpYSB0ZXN0Ig0KICAgICAgICAgICAgICAgfSwgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRlc2NyaXB0aW9uIiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiQ2hsYW15ZGlhIFRlc3QiDQogICAgICAgICAgICAgICB9IF0NCiAgICAgICAgICAgIH0gXSwNCiAgICAgICAgICAgICJleHByZXNzaW9uIiA6IHsNCiAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIyODQ6My0yODQ6OTEiLA0KICAgICAgICAgICAgICAgImRhdGFUeXBlIiA6ICJ7aHR0cDovL2hsNy5vcmcvZmhpcn1PYnNlcnZhdGlvbiIsDQogICAgICAgICAgICAgICAidGVtcGxhdGVJZCIgOiAiaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL09ic2VydmF0aW9uIiwNCiAgICAgICAgICAgICAgICJjb2RlUHJvcGVydHkiIDogImNvZGUiLA0KICAgICAgICAgICAgICAgImNvZGVDb21wYXJhdG9yIiA6ICJpbiIsDQogICAgICAgICAgICAgICAidHlwZSIgOiAiUmV0cmlldmUiLA0KICAgICAgICAgICAgICAgImNvZGVzIiA6IHsNCiAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIyODQ6MTctMjg0OjkwIiwNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJUZXN0cyBmb3IgQ2hsYW15ZGlhIHRyYWNob21hdGlzIGJ5IEN1bHR1cmUgYW5kIElkZW50aWZpY2F0aW9uIE1ldGhvZCkiLA0KICAgICAgICAgICAgICAgICAgImxpYnJhcnlOYW1lIiA6ICJDeCIsDQogICAgICAgICAgICAgICAgICAidHlwZSIgOiAiVmFsdWVTZXRSZWYiDQogICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICB9LCB7DQogICAgICAgICAgICAibG9jYXRvciIgOiAiMjkxOjEtMjkyOjY2IiwNCiAgICAgICAgICAgICJuYW1lIiA6ICJUZXN0cyBmb3IgQ2hsYW15ZGlhIHRyYWNob21hdGlzIE51Y2xlaWMgQWNpZCIsDQogICAgICAgICAgICAiY29udGV4dCIgOiAiUGF0aWVudCIsDQogICAgICAgICAgICAiYWNjZXNzTGV2ZWwiIDogIlB1YmxpYyIsDQogICAgICAgICAgICAiYW5ub3RhdGlvbiIgOiBbIHsNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJBbm5vdGF0aW9uIiwNCiAgICAgICAgICAgICAgICJ0IiA6IFsgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRhdGFFbGVtZW50IiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiTkFDSEMuRTIuREUxNjMgVGVzdHMgZm9yIENobGFteWRpYSB0cmFjaG9tYXRpcyBOdWNsZWljIEFjaWQiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiYWN0aXZpdHkiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5FMiBDaGxhbXlkaWEgdGVzdCINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkZXNjcmlwdGlvbiIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIkNobGFteWRpYSBUZXN0Ig0KICAgICAgICAgICAgICAgfSBdDQogICAgICAgICAgICB9IF0sDQogICAgICAgICAgICAiZXhwcmVzc2lvbiIgOiB7DQogICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMjkyOjMtMjkyOjY2IiwNCiAgICAgICAgICAgICAgICJkYXRhVHlwZSIgOiAie2h0dHA6Ly9obDcub3JnL2ZoaXJ9T2JzZXJ2YXRpb24iLA0KICAgICAgICAgICAgICAgInRlbXBsYXRlSWQiIDogImh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9PYnNlcnZhdGlvbiIsDQogICAgICAgICAgICAgICAiY29kZVByb3BlcnR5IiA6ICJjb2RlIiwNCiAgICAgICAgICAgICAgICJjb2RlQ29tcGFyYXRvciIgOiAiaW4iLA0KICAgICAgICAgICAgICAgInR5cGUiIDogIlJldHJpZXZlIiwNCiAgICAgICAgICAgICAgICJjb2RlcyIgOiB7DQogICAgICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMjkyOjE3LTI5Mjo2NSIsDQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiVGVzdHMgZm9yIENobGFteWRpYSB0cmFjaG9tYXRpcyBOdWNsZWljIEFjaWQiLA0KICAgICAgICAgICAgICAgICAgImxpYnJhcnlOYW1lIiA6ICJDeCIsDQogICAgICAgICAgICAgICAgICAidHlwZSIgOiAiVmFsdWVTZXRSZWYiDQogICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICB9LCB7DQogICAgICAgICAgICAibG9jYXRvciIgOiAiMjk5OjEtMzAwOjM2IiwNCiAgICAgICAgICAgICJuYW1lIiA6ICJDaGxhbXlkaWEgdGVzdCIsDQogICAgICAgICAgICAiY29udGV4dCIgOiAiUGF0aWVudCIsDQogICAgICAgICAgICAiYWNjZXNzTGV2ZWwiIDogIlB1YmxpYyIsDQogICAgICAgICAgICAiYW5ub3RhdGlvbiIgOiBbIHsNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJBbm5vdGF0aW9uIiwNCiAgICAgICAgICAgICAgICJ0IiA6IFsgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRhdGFFbGVtZW50IiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiTkFDSEMuRTIuREU0OCBDaGxhbXlkaWEgdGVzdCINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJhY3Rpdml0eSIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkUyIENobGFteWRpYSB0ZXN0Ig0KICAgICAgICAgICAgICAgfSwgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRlc2NyaXB0aW9uIiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiQ2hsYW15ZGlhIFRlc3QiDQogICAgICAgICAgICAgICB9IF0NCiAgICAgICAgICAgIH0gXSwNCiAgICAgICAgICAgICJleHByZXNzaW9uIiA6IHsNCiAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIzMDA6My0zMDA6MzYiLA0KICAgICAgICAgICAgICAgImRhdGFUeXBlIiA6ICJ7aHR0cDovL2hsNy5vcmcvZmhpcn1PYnNlcnZhdGlvbiIsDQogICAgICAgICAgICAgICAidGVtcGxhdGVJZCIgOiAiaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL09ic2VydmF0aW9uIiwNCiAgICAgICAgICAgICAgICJjb2RlUHJvcGVydHkiIDogImNvZGUiLA0KICAgICAgICAgICAgICAgImNvZGVDb21wYXJhdG9yIiA6ICJpbiIsDQogICAgICAgICAgICAgICAidHlwZSIgOiAiUmV0cmlldmUiLA0KICAgICAgICAgICAgICAgImNvZGVzIiA6IHsNCiAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIzMDA6MTctMzAwOjM1IiwNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJDaGxhbXlkaWEgdGVzdCIsDQogICAgICAgICAgICAgICAgICAibGlicmFyeU5hbWUiIDogIkN4IiwNCiAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJWYWx1ZVNldFJlZiINCiAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICJsb2NhdG9yIiA6ICIzMDc6MS0zMDg6MzkiLA0KICAgICAgICAgICAgIm5hbWUiIDogIkRydWcgUmVoYWJpbGl0YXRpb24iLA0KICAgICAgICAgICAgImNvbnRleHQiIDogIlBhdGllbnQiLA0KICAgICAgICAgICAgImFjY2Vzc0xldmVsIiA6ICJQdWJsaWMiLA0KICAgICAgICAgICAgImFubm90YXRpb24iIDogWyB7DQogICAgICAgICAgICAgICAidHlwZSIgOiAiQW5ub3RhdGlvbiIsDQogICAgICAgICAgICAgICAidCIgOiBbIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkYXRhRWxlbWVudCIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkYxLkRFMSBEcnVnIFJlaGFiaWxpdGF0aW9uIg0KICAgICAgICAgICAgICAgfSwgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImFjdGl2aXR5IiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiTkFDSEMuRjEgSW5qZWN0aW9uIERydWcgVXNlIg0KICAgICAgICAgICAgICAgfSwgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRlc2NyaXB0aW9uIiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiSW5qZWN0aW9uIERydWcgVXNlIg0KICAgICAgICAgICAgICAgfSBdDQogICAgICAgICAgICB9IF0sDQogICAgICAgICAgICAiZXhwcmVzc2lvbiIgOiB7DQogICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMzA4OjMtMzA4OjM5IiwNCiAgICAgICAgICAgICAgICJkYXRhVHlwZSIgOiAie2h0dHA6Ly9obDcub3JnL2ZoaXJ9UHJvY2VkdXJlIiwNCiAgICAgICAgICAgICAgICJ0ZW1wbGF0ZUlkIiA6ICJodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vUHJvY2VkdXJlIiwNCiAgICAgICAgICAgICAgICJjb2RlUHJvcGVydHkiIDogImNvZGUiLA0KICAgICAgICAgICAgICAgImNvZGVDb21wYXJhdG9yIiA6ICJpbiIsDQogICAgICAgICAgICAgICAidHlwZSIgOiAiUmV0cmlldmUiLA0KICAgICAgICAgICAgICAgImNvZGVzIiA6IHsNCiAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIzMDg6MTUtMzA4OjM4IiwNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJEcnVnIFJlaGFiaWxpdGF0aW9uIiwNCiAgICAgICAgICAgICAgICAgICJsaWJyYXJ5TmFtZSIgOiAiQ3giLA0KICAgICAgICAgICAgICAgICAgInR5cGUiIDogIlZhbHVlU2V0UmVmIg0KICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgfSwgew0KICAgICAgICAgICAgImxvY2F0b3IiIDogIjMxNToxLTMxNjo0MCIsDQogICAgICAgICAgICAibmFtZSIgOiAiSW5qZWN0aW9uIEZpbmRpbmdzIiwNCiAgICAgICAgICAgICJjb250ZXh0IiA6ICJQYXRpZW50IiwNCiAgICAgICAgICAgICJhY2Nlc3NMZXZlbCIgOiAiUHVibGljIiwNCiAgICAgICAgICAgICJhbm5vdGF0aW9uIiA6IFsgew0KICAgICAgICAgICAgICAgInR5cGUiIDogIkFubm90YXRpb24iLA0KICAgICAgICAgICAgICAgInQiIDogWyB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGF0YUVsZW1lbnQiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5GMS5ERTEyIEluamVjdGlvbiBGaW5kaW5ncyINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJhY3Rpdml0eSIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkYxIEluamVjdGlvbiBEcnVnIFVzZSINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkZXNjcmlwdGlvbiIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIkluamVjdGlvbiBEcnVnIFVzZSINCiAgICAgICAgICAgICAgIH0gXQ0KICAgICAgICAgICAgfSBdLA0KICAgICAgICAgICAgImV4cHJlc3Npb24iIDogew0KICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjMxNjozLTMxNjo0MCIsDQogICAgICAgICAgICAgICAiZGF0YVR5cGUiIDogIntodHRwOi8vaGw3Lm9yZy9maGlyfU9ic2VydmF0aW9uIiwNCiAgICAgICAgICAgICAgICJ0ZW1wbGF0ZUlkIiA6ICJodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vT2JzZXJ2YXRpb24iLA0KICAgICAgICAgICAgICAgImNvZGVQcm9wZXJ0eSIgOiAiY29kZSIsDQogICAgICAgICAgICAgICAiY29kZUNvbXBhcmF0b3IiIDogImluIiwNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJSZXRyaWV2ZSIsDQogICAgICAgICAgICAgICAiY29kZXMiIDogew0KICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjMxNjoxNy0zMTY6MzkiLA0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogIkluamVjdGlvbiBGaW5kaW5ncyIsDQogICAgICAgICAgICAgICAgICAibGlicmFyeU5hbWUiIDogIkN4IiwNCiAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJWYWx1ZVNldFJlZiINCiAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICJsb2NhdG9yIiA6ICIzMjM6MS0zMjQ6MzgiLA0KICAgICAgICAgICAgIm5hbWUiIDogIklEVSBhcyBhIGNvbmRpdGlvbiIsDQogICAgICAgICAgICAiY29udGV4dCIgOiAiUGF0aWVudCIsDQogICAgICAgICAgICAiYWNjZXNzTGV2ZWwiIDogIlB1YmxpYyIsDQogICAgICAgICAgICAiYW5ub3RhdGlvbiIgOiBbIHsNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJBbm5vdGF0aW9uIiwNCiAgICAgICAgICAgICAgICJ0IiA6IFsgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRhdGFFbGVtZW50IiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiTkFDSEMuRjEuREUxNSBJRFUgYXMgYSBjb25kaXRpb24iDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiYWN0aXZpdHkiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5GMSBJbmplY3Rpb24gRHJ1ZyBVc2UiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGVzY3JpcHRpb24iLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJJbmplY3Rpb24gRHJ1ZyBVc2UiDQogICAgICAgICAgICAgICB9IF0NCiAgICAgICAgICAgIH0gXSwNCiAgICAgICAgICAgICJleHByZXNzaW9uIiA6IHsNCiAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIzMjQ6My0zMjQ6MzgiLA0KICAgICAgICAgICAgICAgImRhdGFUeXBlIiA6ICJ7aHR0cDovL2hsNy5vcmcvZmhpcn1Db25kaXRpb24iLA0KICAgICAgICAgICAgICAgInRlbXBsYXRlSWQiIDogImh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9Db25kaXRpb24iLA0KICAgICAgICAgICAgICAgImNvZGVQcm9wZXJ0eSIgOiAiY29kZSIsDQogICAgICAgICAgICAgICAiY29kZUNvbXBhcmF0b3IiIDogImluIiwNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJSZXRyaWV2ZSIsDQogICAgICAgICAgICAgICAiY29kZXMiIDogew0KICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjMyNDoxNS0zMjQ6MzciLA0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogIklEVSBhcyBhIGNvbmRpdGlvbiIsDQogICAgICAgICAgICAgICAgICAibGlicmFyeU5hbWUiIDogIkN4IiwNCiAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJWYWx1ZVNldFJlZiINCiAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICJsb2NhdG9yIiA6ICIzMzE6MS0zMzI6NDgiLA0KICAgICAgICAgICAgIm5hbWUiIDogIkluamVjdGlvbiBEcnVnIFVzZSIsDQogICAgICAgICAgICAiY29udGV4dCIgOiAiUGF0aWVudCIsDQogICAgICAgICAgICAiYWNjZXNzTGV2ZWwiIDogIlB1YmxpYyIsDQogICAgICAgICAgICAiYW5ub3RhdGlvbiIgOiBbIHsNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJBbm5vdGF0aW9uIiwNCiAgICAgICAgICAgICAgICJ0IiA6IFsgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRhdGFFbGVtZW50IiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiTkFDSEMuRjEuREUyMDAgSW5qZWN0aW9uIERydWcgVXNlIg0KICAgICAgICAgICAgICAgfSwgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImFjdGl2aXR5IiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiTkFDSEMuRjEgSW5qZWN0aW9uIERydWcgVXNlIg0KICAgICAgICAgICAgICAgfSwgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRlc2NyaXB0aW9uIiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiSW5qZWN0aW9uIERydWcgVXNlIg0KICAgICAgICAgICAgICAgfSBdDQogICAgICAgICAgICB9IF0sDQogICAgICAgICAgICAiZXhwcmVzc2lvbiIgOiB7DQogICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMzMyOjMtMzMyOjQ4IiwNCiAgICAgICAgICAgICAgICJkYXRhVHlwZSIgOiAie2h0dHA6Ly9obDcub3JnL2ZoaXJ9TWVkaWNhdGlvblN0YXRlbWVudCIsDQogICAgICAgICAgICAgICAidGVtcGxhdGVJZCIgOiAiaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL01lZGljYXRpb25TdGF0ZW1lbnQiLA0KICAgICAgICAgICAgICAgImNvZGVQcm9wZXJ0eSIgOiAibWVkaWNhdGlvbiIsDQogICAgICAgICAgICAgICAiY29kZUNvbXBhcmF0b3IiIDogImluIiwNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJSZXRyaWV2ZSIsDQogICAgICAgICAgICAgICAiY29kZXMiIDogew0KICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjMzMjoyNS0zMzI6NDciLA0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogIkluamVjdGlvbiBEcnVnIFVzZSIsDQogICAgICAgICAgICAgICAgICAibGlicmFyeU5hbWUiIDogIkN4IiwNCiAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJWYWx1ZVNldFJlZiINCiAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICJsb2NhdG9yIiA6ICIzMzk6MS0zNDA6NDAiLA0KICAgICAgICAgICAgIm5hbWUiIDogIlByZWduYW5jeSBFbmNvdW50ZXJzIiwNCiAgICAgICAgICAgICJjb250ZXh0IiA6ICJQYXRpZW50IiwNCiAgICAgICAgICAgICJhY2Nlc3NMZXZlbCIgOiAiUHVibGljIiwNCiAgICAgICAgICAgICJhbm5vdGF0aW9uIiA6IFsgew0KICAgICAgICAgICAgICAgInR5cGUiIDogIkFubm90YXRpb24iLA0KICAgICAgICAgICAgICAgInQiIDogWyB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGF0YUVsZW1lbnQiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5GMi5ERTEgUHJlZ25hbmN5IEVuY291bnRlcnMiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiYWN0aXZpdHkiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5GMiBQcmVnbmFuY3kiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGVzY3JpcHRpb24iLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJFbmNvdW50ZXJzIGluIHRoZSB1c2FnZSBvZiBQcmVnbmFuY3kiDQogICAgICAgICAgICAgICB9IF0NCiAgICAgICAgICAgIH0gXSwNCiAgICAgICAgICAgICJleHByZXNzaW9uIiA6IHsNCiAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIzNDA6My0zNDA6NDAiLA0KICAgICAgICAgICAgICAgImRhdGFUeXBlIiA6ICJ7aHR0cDovL2hsNy5vcmcvZmhpcn1FbmNvdW50ZXIiLA0KICAgICAgICAgICAgICAgInRlbXBsYXRlSWQiIDogImh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9FbmNvdW50ZXIiLA0KICAgICAgICAgICAgICAgImNvZGVQcm9wZXJ0eSIgOiAidHlwZSIsDQogICAgICAgICAgICAgICAiY29kZUNvbXBhcmF0b3IiIDogImluIiwNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJSZXRyaWV2ZSIsDQogICAgICAgICAgICAgICAiY29kZXMiIDogew0KICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjM0MDoxNS0zNDA6MzkiLA0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogIlByZWduYW5jeSBFbmNvdW50ZXJzIiwNCiAgICAgICAgICAgICAgICAgICJsaWJyYXJ5TmFtZSIgOiAiQ3giLA0KICAgICAgICAgICAgICAgICAgInR5cGUiIDogIlZhbHVlU2V0UmVmIg0KICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgfSwgew0KICAgICAgICAgICAgImxvY2F0b3IiIDogIjM0NzoxLTM0ODozMyIsDQogICAgICAgICAgICAibmFtZSIgOiAiTWF0ZXJuYWwgQ2FyZSIsDQogICAgICAgICAgICAiY29udGV4dCIgOiAiUGF0aWVudCIsDQogICAgICAgICAgICAiYWNjZXNzTGV2ZWwiIDogIlB1YmxpYyIsDQogICAgICAgICAgICAiYW5ub3RhdGlvbiIgOiBbIHsNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJBbm5vdGF0aW9uIiwNCiAgICAgICAgICAgICAgICJ0IiA6IFsgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRhdGFFbGVtZW50IiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiTkFDSEMuRjIuREUxMDQgTWF0ZXJuYWwgQ2FyZSINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJhY3Rpdml0eSIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkYyIFByZWduYW5jeSINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkZXNjcmlwdGlvbiIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIlByb2NlZHVyZXMgaWRlbnRpZnlpbmcgTWF0ZXJuYWwgQ2FyZSBmb3IgUHJlZ25hbmN5Ig0KICAgICAgICAgICAgICAgfSBdDQogICAgICAgICAgICB9IF0sDQogICAgICAgICAgICAiZXhwcmVzc2lvbiIgOiB7DQogICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMzQ4OjMtMzQ4OjMzIiwNCiAgICAgICAgICAgICAgICJkYXRhVHlwZSIgOiAie2h0dHA6Ly9obDcub3JnL2ZoaXJ9UHJvY2VkdXJlIiwNCiAgICAgICAgICAgICAgICJ0ZW1wbGF0ZUlkIiA6ICJodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vUHJvY2VkdXJlIiwNCiAgICAgICAgICAgICAgICJjb2RlUHJvcGVydHkiIDogImNvZGUiLA0KICAgICAgICAgICAgICAgImNvZGVDb21wYXJhdG9yIiA6ICJpbiIsDQogICAgICAgICAgICAgICAidHlwZSIgOiAiUmV0cmlldmUiLA0KICAgICAgICAgICAgICAgImNvZGVzIiA6IHsNCiAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIzNDg6MTUtMzQ4OjMyIiwNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJNYXRlcm5hbCBDYXJlIiwNCiAgICAgICAgICAgICAgICAgICJsaWJyYXJ5TmFtZSIgOiAiQ3giLA0KICAgICAgICAgICAgICAgICAgInR5cGUiIDogIlZhbHVlU2V0UmVmIg0KICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgfSwgew0KICAgICAgICAgICAgImxvY2F0b3IiIDogIjM1NToxLTM1Njo0MCIsDQogICAgICAgICAgICAibmFtZSIgOiAiUHJlZ25hbmN5IENvbmRpdGlvbnMiLA0KICAgICAgICAgICAgImNvbnRleHQiIDogIlBhdGllbnQiLA0KICAgICAgICAgICAgImFjY2Vzc0xldmVsIiA6ICJQdWJsaWMiLA0KICAgICAgICAgICAgImFubm90YXRpb24iIDogWyB7DQogICAgICAgICAgICAgICAidHlwZSIgOiAiQW5ub3RhdGlvbiIsDQogICAgICAgICAgICAgICAidCIgOiBbIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkYXRhRWxlbWVudCIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkYyLkRFMTEyOCBQcmVnbmFuY3kgQ29uZGl0aW9ucyINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJhY3Rpdml0eSIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkYyIFByZWduYW5jeSINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJkZXNjcmlwdGlvbiIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIkNvbmRpdGlvbnMgaWRlbnRpZmllZCBmb3IgUHJlZ25hbmN5Ig0KICAgICAgICAgICAgICAgfSBdDQogICAgICAgICAgICB9IF0sDQogICAgICAgICAgICAiZXhwcmVzc2lvbiIgOiB7DQogICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMzU2OjMtMzU2OjQwIiwNCiAgICAgICAgICAgICAgICJkYXRhVHlwZSIgOiAie2h0dHA6Ly9obDcub3JnL2ZoaXJ9Q29uZGl0aW9uIiwNCiAgICAgICAgICAgICAgICJ0ZW1wbGF0ZUlkIiA6ICJodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vQ29uZGl0aW9uIiwNCiAgICAgICAgICAgICAgICJjb2RlUHJvcGVydHkiIDogImNvZGUiLA0KICAgICAgICAgICAgICAgImNvZGVDb21wYXJhdG9yIiA6ICJpbiIsDQogICAgICAgICAgICAgICAidHlwZSIgOiAiUmV0cmlldmUiLA0KICAgICAgICAgICAgICAgImNvZGVzIiA6IHsNCiAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIzNTY6MTUtMzU2OjM5IiwNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJQcmVnbmFuY3kgQ29uZGl0aW9ucyIsDQogICAgICAgICAgICAgICAgICAibGlicmFyeU5hbWUiIDogIkN4IiwNCiAgICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJWYWx1ZVNldFJlZiINCiAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICJsb2NhdG9yIiA6ICIzNjM6MS0zNjQ6NDEiLA0KICAgICAgICAgICAgIm5hbWUiIDogIlByZWduYW5jeSBTdXBlcnZpc2lvbiIsDQogICAgICAgICAgICAiY29udGV4dCIgOiAiUGF0aWVudCIsDQogICAgICAgICAgICAiYWNjZXNzTGV2ZWwiIDogIlB1YmxpYyIsDQogICAgICAgICAgICAiYW5ub3RhdGlvbiIgOiBbIHsNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJBbm5vdGF0aW9uIiwNCiAgICAgICAgICAgICAgICJ0IiA6IFsgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRhdGFFbGVtZW50IiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiTkFDSEMuRjIuREUzOCBQcmVnbmFuY3kgU3VwZXJ2aXNpb24iDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiYWN0aXZpdHkiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5GMiBQcmVnbmFuY3kiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGVzY3JpcHRpb24iLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJQcm9jZWR1cmVzIGluIHRoZSB1c2FnZSBvZiB0aGUgU3VwZXJ2aXNpb24gb2YgUHJlZ25hbmN5Ig0KICAgICAgICAgICAgICAgfSBdDQogICAgICAgICAgICB9IF0sDQogICAgICAgICAgICAiZXhwcmVzc2lvbiIgOiB7DQogICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMzY0OjMtMzY0OjQxIiwNCiAgICAgICAgICAgICAgICJkYXRhVHlwZSIgOiAie2h0dHA6Ly9obDcub3JnL2ZoaXJ9UHJvY2VkdXJlIiwNCiAgICAgICAgICAgICAgICJ0ZW1wbGF0ZUlkIiA6ICJodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vUHJvY2VkdXJlIiwNCiAgICAgICAgICAgICAgICJjb2RlUHJvcGVydHkiIDogImNvZGUiLA0KICAgICAgICAgICAgICAgImNvZGVDb21wYXJhdG9yIiA6ICJpbiIsDQogICAgICAgICAgICAgICAidHlwZSIgOiAiUmV0cmlldmUiLA0KICAgICAgICAgICAgICAgImNvZGVzIiA6IHsNCiAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIzNjQ6MTUtMzY0OjQwIiwNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJQcmVnbmFuY3kgU3VwZXJ2aXNpb24iLA0KICAgICAgICAgICAgICAgICAgImxpYnJhcnlOYW1lIiA6ICJDeCIsDQogICAgICAgICAgICAgICAgICAidHlwZSIgOiAiVmFsdWVTZXRSZWYiDQogICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICB9LCB7DQogICAgICAgICAgICAibG9jYXRvciIgOiAiMzcxOjEtMzcyOjQwIiwNCiAgICAgICAgICAgICJuYW1lIiA6ICJQcmVnbmFuY3kgUHJvY2VkdXJlcyIsDQogICAgICAgICAgICAiY29udGV4dCIgOiAiUGF0aWVudCIsDQogICAgICAgICAgICAiYWNjZXNzTGV2ZWwiIDogIlB1YmxpYyIsDQogICAgICAgICAgICAiYW5ub3RhdGlvbiIgOiBbIHsNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJBbm5vdGF0aW9uIiwNCiAgICAgICAgICAgICAgICJ0IiA6IFsgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRhdGFFbGVtZW50IiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiTkFDSEMuRjIuREU2NjggUHJlZ25hbmN5IFByb2NlZHVyZXMiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiYWN0aXZpdHkiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5GMiBQcmVnbmFuY3kiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGVzY3JpcHRpb24iLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJQcm9jZWR1cmVzIGlkZW50aWZpZWQgZm9yIFByZWduYW5jeSINCiAgICAgICAgICAgICAgIH0gXQ0KICAgICAgICAgICAgfSBdLA0KICAgICAgICAgICAgImV4cHJlc3Npb24iIDogew0KICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjM3MjozLTM3Mjo0MCIsDQogICAgICAgICAgICAgICAiZGF0YVR5cGUiIDogIntodHRwOi8vaGw3Lm9yZy9maGlyfVByb2NlZHVyZSIsDQogICAgICAgICAgICAgICAidGVtcGxhdGVJZCIgOiAiaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL1Byb2NlZHVyZSIsDQogICAgICAgICAgICAgICAiY29kZVByb3BlcnR5IiA6ICJjb2RlIiwNCiAgICAgICAgICAgICAgICJjb2RlQ29tcGFyYXRvciIgOiAiaW4iLA0KICAgICAgICAgICAgICAgInR5cGUiIDogIlJldHJpZXZlIiwNCiAgICAgICAgICAgICAgICJjb2RlcyIgOiB7DQogICAgICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMzcyOjE1LTM3MjozOSIsDQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiUHJlZ25hbmN5IFByb2NlZHVyZXMiLA0KICAgICAgICAgICAgICAgICAgImxpYnJhcnlOYW1lIiA6ICJDeCIsDQogICAgICAgICAgICAgICAgICAidHlwZSIgOiAiVmFsdWVTZXRSZWYiDQogICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICB9LCB7DQogICAgICAgICAgICAibG9jYXRvciIgOiAiMzc5OjEtMzgwOjQ0IiwNCiAgICAgICAgICAgICJuYW1lIiA6ICJQcmVnbmFuY3kgT2JzZXJ2YXRpb25zIiwNCiAgICAgICAgICAgICJjb250ZXh0IiA6ICJQYXRpZW50IiwNCiAgICAgICAgICAgICJhY2Nlc3NMZXZlbCIgOiAiUHVibGljIiwNCiAgICAgICAgICAgICJhbm5vdGF0aW9uIiA6IFsgew0KICAgICAgICAgICAgICAgInR5cGUiIDogIkFubm90YXRpb24iLA0KICAgICAgICAgICAgICAgInQiIDogWyB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGF0YUVsZW1lbnQiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5GMi5ERTkwMCBQcmVnbmFuY3kgT2JzZXJ2YXRpb25zIg0KICAgICAgICAgICAgICAgfSwgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImFjdGl2aXR5IiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiTkFDSEMuRjIgUHJlZ25hbmN5Ig0KICAgICAgICAgICAgICAgfSwgew0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImRlc2NyaXB0aW9uIiwNCiAgICAgICAgICAgICAgICAgICJ2YWx1ZSIgOiAiT2JzZXJ2YXRpb25zIGlkZW50aWZpZWQgZm9yIFByZWduYW5jeSINCiAgICAgICAgICAgICAgIH0gXQ0KICAgICAgICAgICAgfSBdLA0KICAgICAgICAgICAgImV4cHJlc3Npb24iIDogew0KICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjM4MDozLTM4MDo0NCIsDQogICAgICAgICAgICAgICAiZGF0YVR5cGUiIDogIntodHRwOi8vaGw3Lm9yZy9maGlyfU9ic2VydmF0aW9uIiwNCiAgICAgICAgICAgICAgICJ0ZW1wbGF0ZUlkIiA6ICJodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vT2JzZXJ2YXRpb24iLA0KICAgICAgICAgICAgICAgImNvZGVQcm9wZXJ0eSIgOiAiY29kZSIsDQogICAgICAgICAgICAgICAiY29kZUNvbXBhcmF0b3IiIDogImluIiwNCiAgICAgICAgICAgICAgICJ0eXBlIiA6ICJSZXRyaWV2ZSIsDQogICAgICAgICAgICAgICAiY29kZXMiIDogew0KICAgICAgICAgICAgICAgICAgImxvY2F0b3IiIDogIjM4MDoxNy0zODA6NDMiLA0KICAgICAgICAgICAgICAgICAgIm5hbWUiIDogIlByZWduYW5jeSBPYnNlcnZhdGlvbnMiLA0KICAgICAgICAgICAgICAgICAgImxpYnJhcnlOYW1lIiA6ICJDeCIsDQogICAgICAgICAgICAgICAgICAidHlwZSIgOiAiVmFsdWVTZXRSZWYiDQogICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICB9LCB7DQogICAgICAgICAgICAibG9jYXRvciIgOiAiMzg3OjEtMzg4OjQ1IiwNCiAgICAgICAgICAgICJuYW1lIiA6ICJQb3N0IEV4cG9zdXJlIFByb3BoeWxheGlzIiwNCiAgICAgICAgICAgICJjb250ZXh0IiA6ICJQYXRpZW50IiwNCiAgICAgICAgICAgICJhY2Nlc3NMZXZlbCIgOiAiUHVibGljIiwNCiAgICAgICAgICAgICJhbm5vdGF0aW9uIiA6IFsgew0KICAgICAgICAgICAgICAgInR5cGUiIDogIkFubm90YXRpb24iLA0KICAgICAgICAgICAgICAgInQiIDogWyB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGF0YUVsZW1lbnQiLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJOQUNIQy5GMy5ERTEgUG9zdCBFeHBvc3VyZSBQcm9waHlsYXhpcyINCiAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJhY3Rpdml0eSIsDQogICAgICAgICAgICAgICAgICAidmFsdWUiIDogIk5BQ0hDLkYzIFBvc3QgRXhwb3N1cmUgUHJvcGh5bGF4aXMiDQogICAgICAgICAgICAgICB9LCB7DQogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiZGVzY3JpcHRpb24iLA0KICAgICAgICAgICAgICAgICAgInZhbHVlIiA6ICJQb3N0IEV4cG9zdXJlIFByb3BoeWxheGlzIg0KICAgICAgICAgICAgICAgfSBdDQogICAgICAgICAgICB9IF0sDQogICAgICAgICAgICAiZXhwcmVzc2lvbiIgOiB7DQogICAgICAgICAgICAgICAibG9jYXRvciIgOiAiMzg4OjMtMzg4OjQ1IiwNCiAgICAgICAgICAgICAgICJkYXRhVHlwZSIgOiAie2h0dHA6Ly9obDcub3JnL2ZoaXJ9UHJvY2VkdXJlIiwNCiAgICAgICAgICAgICAgICJ0ZW1wbGF0ZUlkIiA6ICJodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vUHJvY2VkdXJlIiwNCiAgICAgICAgICAgICAgICJjb2RlUHJvcGVydHkiIDogImNvZGUiLA0KICAgICAgICAgICAgICAgImNvZGVDb21wYXJhdG9yIiA6ICJpbiIsDQogICAgICAgICAgICAgICAidHlwZSIgOiAiUmV0cmlldmUiLA0KICAgICAgICAgICAgICAgImNvZGVzIiA6IHsNCiAgICAgICAgICAgICAgICAgICJsb2NhdG9yIiA6ICIzODg6MTUtMzg4OjQ0IiwNCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJQb3N0IEV4cG9zdXJlIFByb3BoeWxheGlzIiwNCiAgICAgICAgICAgICAgICAgICJsaWJyYXJ5TmFtZSIgOiAiQ3giLA0KICAgICAgICAgICAgICAgICAgInR5cGUiIDogIlZhbHVlU2V0UmVmIg0KICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgfSBdDQogICAgICB9DQogICB9DQp9"
  } ]
}