{
  "resourceType": "Library",
  "id": "HIVDataElements",
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  } ],
  "url": "http://fhir.org/guides/nachc/hiv-cds/Library/HIVDataElements",
  "name": "HIVDataElements",
  "title": "Library - HIV Data Elements",
  "description": "A Generated Logic library encapsulating necessary concepts and data elements in relation for HIV Screening in context of the Patient.",
  "content": [ {
    "contentType": "text/cql",
    "data": ""
  } ]
}