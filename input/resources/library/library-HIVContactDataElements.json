{
  "resourceType": "Library",
  "id": "HIVContactDataElements",
  "url": "http://fhir.org/guides/nachc/hiv-cds/Library/HIVContactDataElements",
  "name": "HIVContactDataElements",
  "title": "Library - Contact Data Elements",
  "description": "A Generated Logic library encapsulating necessary concepts and data elements for Encounters in relation for HIV Screening.",
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FC",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/Library/FHIRCommon"
  }, {
    "type": "depends-on",
    "display": "Library NC",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/Library/NACHCCommon"
  }, {
    "type": "depends-on",
    "display": "Library AC",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/Library/HIVCommon"
  }, {
    "type": "depends-on",
    "display": "Library Cx",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/Library/HIVConcepts"
  }, {
    "type": "depends-on",
    "display": "Value set HIV infection as a condition",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hiv-infection-as-a-condition"
  }, {
    "type": "depends-on",
    "display": "Value set HIV-1 HIV 2 Ab Ag tests",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hiv-1-hiv-2-ab-ag-tests"
  }, {
    "type": "depends-on",
    "display": "Value set HIV Viral Load",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hiv-viral-load"
  }, {
    "type": "depends-on",
    "display": "Value set Hepatitis C Virus Infection (Disorders)",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hepatitis-c-virus-infection-disorders"
  }, {
    "type": "depends-on",
    "display": "Value set Chronic Infection of liver due to Hepatitis C virus",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chronic-infection-of-liver-due-to-hepatitis-c-virus"
  }, {
    "type": "depends-on",
    "display": "Value set HCV Infection (Organism or Substance in Lab Results)",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hcv-infection-organism-or-substance-in-lab-results"
  }, {
    "type": "depends-on",
    "display": "Value set Hepatitis C condition",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hepatitis-c-condition"
  }, {
    "type": "depends-on",
    "display": "Value set Hepatitis C Ag",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hepatitis-c-ag"
  }, {
    "type": "depends-on",
    "display": "Value set Hepatitis C nucleic acid",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hepatitis-c-nucleic-acid"
  }, {
    "type": "depends-on",
    "display": "Value set Hepatitis C virus antibody test using Immunoblotting (IB) method",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hepatitis-c-virus-antibody-test-using-immunoblotting-ib-method"
  }, {
    "type": "depends-on",
    "display": "Value set Hepatitis C virus antibody test",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hepatitis-c-virus-antibody-test"
  }, {
    "type": "depends-on",
    "display": "Value set Hepatitis C virus nucleic (RNA) test",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hepatitis-c-virus-nucleic-rna-test"
  }, {
    "type": "depends-on",
    "display": "Value set Syphilis",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/syphilis"
  }, {
    "type": "depends-on",
    "display": "Value set Syphilis (Organism or Substance in Lab Results)",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/syphilis-organism-or-substance-in-lab-results"
  }, {
    "type": "depends-on",
    "display": "Value set Syphilis condition",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/syphilis-condition"
  }, {
    "type": "depends-on",
    "display": "Value set Syphilis (Tests for Treponema pallidum Nucleic Acid)",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/syphilis-tests-for-treponema-pallidum-nucleic-acid"
  }, {
    "type": "depends-on",
    "display": "Value set Syphilis (Tests for Treponemal or Non Treponemal Antibody)",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/syphilis-tests-for-treponemal-or-non-treponemal-antibody"
  }, {
    "type": "depends-on",
    "display": "Value set Gonococcal Infections and Venereal Diseases",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonococcal-infections-and-venereal-diseases"
  }, {
    "type": "depends-on",
    "display": "Value set Gonorrhea [Neisseria gonorrhoeae] (Organism or Substance in Lab Results)",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-neisseria-gonorrhoeae-organism-or-substance-in-lab-results"
  }, {
    "type": "depends-on",
    "display": "Value set Gonorrhea [Neisseria species Unspecified] (Organism or Substance in Lab Results)",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-neisseria-species-unspecified-organism-or-substance-in-lab-results"
  }, {
    "type": "depends-on",
    "display": "Value set Gonorrhea [Secondary Sites Complications Chronic] (Disorders)",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-secondary-sites-complications-chronic-disorders"
  }, {
    "type": "depends-on",
    "display": "Value set Gonorrhea Tests for Neisseria gonorrhea by Culture",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-tests-for-neisseria-gonorrhea-by-culture"
  }, {
    "type": "depends-on",
    "display": "Value set Gonorrhea Tests and Chlamydia/Gonorrhea Combined Tests",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-tests-and-chlamydia-gonorrhea-combined-tests"
  }, {
    "type": "depends-on",
    "display": "Value set Gonorrhea (Tests for Neisseria gonorrhoeae Nucleic Acid)",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-tests-for-neisseria-gonorrhoeae-nucleic-acid"
  }, {
    "type": "depends-on",
    "display": "Value set Gonorrhea (Tests for Neisseria species by Culture and Identification Method)",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-tests-for-neisseria-species-by-culture-and-identification-method"
  }, {
    "type": "depends-on",
    "display": "Value set Gonorrhea test",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-test"
  }, {
    "type": "depends-on",
    "display": "Value set Chlamydia",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chlamydia"
  }, {
    "type": "depends-on",
    "display": "Value set Chlamydia Infections and Venereal Diseases",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chlamydia-infections-and-venereal-diseases"
  }, {
    "type": "depends-on",
    "display": "Value set Chlamydia trachomatis Infection [Secondary Sites Complications] (Disorders)",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chlamydia-trachomatis-infection-secondary-sites-complications-disorders"
  }, {
    "type": "depends-on",
    "display": "Value set Chlamydia trachomatis organism or Chlamydia trachomatis substance",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chlamydia-trachomatis-organism-or-chlamydia-trachomatis-substance"
  }, {
    "type": "depends-on",
    "display": "Value set Chlamydia Screening",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chlamydia-screening"
  }, {
    "type": "depends-on",
    "display": "Value set Chlamydia Trachomatis Tests, FPAR",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chlamydia-trachomatis-tests-fpar"
  }, {
    "type": "depends-on",
    "display": "Value set Tests for Chlamydia trachomatis Antigen",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/tests-for-chlamydia-trachomatis-antigen"
  }, {
    "type": "depends-on",
    "display": "Value set Tests for Chlamydia trachomatis by Culture and Identification Method)",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/tests-for-chlamydia-trachomatis-by-culture-and-identification-method"
  }, {
    "type": "depends-on",
    "display": "Value set Tests for Chlamydia trachomatis Nucleic Acid",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/tests-for-chlamydia-trachomatis-nucleic-acid"
  }, {
    "type": "depends-on",
    "display": "Value set Chlamydia test",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chlamydia-test"
  }, {
    "type": "depends-on",
    "display": "Value set Drug Rehabilitation",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/drug-rehabilitation"
  }, {
    "type": "depends-on",
    "display": "Value set Injection Findings",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/injection-findings"
  }, {
    "type": "depends-on",
    "display": "Value set IDU as a condition",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/idu-as-a-condition"
  }, {
    "type": "depends-on",
    "display": "Value set Injection Drug Use",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/injection-drug-use"
  }, {
    "type": "depends-on",
    "display": "Value set Pregnancy Encounters",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/pregnancy-encounters"
  }, {
    "type": "depends-on",
    "display": "Value set Maternal Care",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/maternal-care"
  }, {
    "type": "depends-on",
    "display": "Value set Pregnancy Conditions",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/pregnancy-conditions"
  }, {
    "type": "depends-on",
    "display": "Value set Pregnancy Supervision",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/pregnancy-supervision"
  }, {
    "type": "depends-on",
    "display": "Value set Pregnancy Procedures",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/pregnancy-procedures"
  }, {
    "type": "depends-on",
    "display": "Value set Pregnancy Observations",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/pregnancy-observations"
  }, {
    "type": "depends-on",
    "display": "Value set Post Exposure Prophylaxis",
    "resource": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/post-exposure-prophylaxis"
  } ],
  "parameter": [ {
    "name": "Encounter",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Encounter"
  }, {
    "name": "HIV infection as a condition",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "HIV-1 HIV 2 Ab Ag tests",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "HIV Viral Load",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Hepatitis C Virus Infection (Disorders)",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Chronic Infection of liver due to Hepatitis C virus",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "HCV Infection (Organism or Substance in Lab Results)",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Hepatitis C condition",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Hepatitis C Ag",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Hepatitis C nucleic acid",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Hepatitis C virus antibody test using Immunoblotting (IB) method",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Hepatitis C virus antibody test",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Hepatitis C virus nucleic (RNA) test",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Syphilis",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Syphilis (Organism or Substance in Lab Results)",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Syphilis condition",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Syphilis (Tests for Treponema pallidum Nucleic Acid)",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Syphilis (Tests for Treponemal or Non Treponemal Antibody)",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Gonococcal Infections and Venereal Diseases",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Gonorrhea [Neisseria gonorrhoeae] (Organism or Substance in Lab Results)",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Gonorrhea [Neisseria species Unspecified] (Organism or Substance in Lab Results)",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Gonorrhea [Secondary Sites Complications Chronic] (Disorders)",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Gonorrhea Tests for Neisseria gonorrhea by Culture",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Gonorrhea Tests and Chlamydia/Gonorrhea Combined Tests",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Gonorrhea (Tests for Neisseria gonorrhoeae Nucleic Acid)",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Gonorrhea (Tests for Neisseria species by Culture and Identification Method)",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Gonorrhea test",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Chlamydia",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Chlamydia Infections and Venereal Diseases",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Chlamydia trachomatis Infection [Secondary Sites Complications] (Disorders)",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Chlamydia trachomatis organism or Chlamydia trachomatis substance",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Chlamydia Screening",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Chlamydia Trachomatis Tests, FPAR",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Tests for Chlamydia trachomatis Antigen",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Tests for Chlamydia trachomatis by Culture and Identification Method)",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Tests for Chlamydia trachomatis Nucleic Acid",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Chlamydia test",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Drug Rehabilitation",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Procedure"
  }, {
    "name": "Injection Findings",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "IDU as a condition",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Injection Drug Use",
    "use": "out",
    "min": 0,
    "max": "*"
  }, {
    "name": "Pregnancy Encounters",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Encounter"
  }, {
    "name": "Maternal Care",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Procedure"
  }, {
    "name": "Pregnancy Conditions",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Condition"
  }, {
    "name": "Pregnancy Supervision",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Procedure"
  }, {
    "name": "Pregnancy Procedures",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Procedure"
  }, {
    "name": "Pregnancy Observations",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Post Exposure Prophylaxis",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Procedure"
  } ],
  "dataRequirement": [ {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hiv-infection-as-a-condition"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hiv-1-hiv-2-ab-ag-tests"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hiv-viral-load"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hepatitis-c-virus-infection-disorders"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chronic-infection-of-liver-due-to-hepatitis-c-virus"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hcv-infection-organism-or-substance-in-lab-results"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hepatitis-c-condition"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hepatitis-c-ag"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hepatitis-c-nucleic-acid"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hepatitis-c-virus-antibody-test-using-immunoblotting-ib-method"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hepatitis-c-virus-antibody-test"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/hepatitis-c-virus-nucleic-rna-test"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/syphilis"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/syphilis-organism-or-substance-in-lab-results"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/syphilis-condition"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/syphilis-tests-for-treponema-pallidum-nucleic-acid"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/syphilis-tests-for-treponemal-or-non-treponemal-antibody"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonococcal-infections-and-venereal-diseases"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-neisseria-gonorrhoeae-organism-or-substance-in-lab-results"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-neisseria-species-unspecified-organism-or-substance-in-lab-results"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-secondary-sites-complications-chronic-disorders"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-tests-for-neisseria-gonorrhea-by-culture"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-tests-and-chlamydia-gonorrhea-combined-tests"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-tests-for-neisseria-gonorrhoeae-nucleic-acid"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-tests-for-neisseria-species-by-culture-and-identification-method"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/gonorrhea-test"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chlamydia"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chlamydia-infections-and-venereal-diseases"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chlamydia-trachomatis-infection-secondary-sites-complications-disorders"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chlamydia-trachomatis-organism-or-chlamydia-trachomatis-substance"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chlamydia-screening"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chlamydia-trachomatis-tests-fpar"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/tests-for-chlamydia-trachomatis-antigen"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/tests-for-chlamydia-trachomatis-by-culture-and-identification-method"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/tests-for-chlamydia-trachomatis-nucleic-acid"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/chlamydia-test"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/drug-rehabilitation"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/injection-findings"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/idu-as-a-condition"
    } ]
  }, {
    "profile": [ "http://hl7.org/fhir/StructureDefinition/MedicationStatement" ],
    "codeFilter": [ {
      "path": "medication",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/injection-drug-use"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/pregnancy-encounters"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/maternal-care"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/pregnancy-conditions"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/pregnancy-supervision"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/pregnancy-procedures"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/pregnancy-observations"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Procedure" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://fhir.org/guides/nachc/hiv-cds/ValueSet/post-exposure-prophylaxis"
    } ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": ""
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  }, {
    "contentType": "application/elm+json",
    "data": ""
  } ]
}